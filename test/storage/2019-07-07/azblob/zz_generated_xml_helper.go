// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azblob

import (
	"encoding/xml"
	"strings"
)

type additionalProperties map[string]*string

// UnmarshalXML implements the xml.Unmarshaler interface for additionalProperties.
func (ap *additionalProperties) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tokName := ""
	tokVal := ""
	inserted := false
	for t, err := d.Token(); err == nil; t, err = d.Token() {
		switch tt := t.(type) {
		case xml.StartElement:
			tokName = strings.ToLower(tt.Name.Local)
		case xml.CharData:
			temp := string(tt)
			if tokName != "" {
				if *ap == nil {
					*ap = additionalProperties{}
				}
				(*ap)[tokName] = &temp
				tokName = ""
				inserted = true
			}
			tokVal = temp
		case xml.EndElement:
			if !inserted && tokName == "" && tt.Name.Local != "" {
				if *ap == nil {
					*ap = additionalProperties{}
				}
				(*ap)[tt.Name.Local] = &tokVal
				inserted = false
			}
		}
	}
	return nil
}
