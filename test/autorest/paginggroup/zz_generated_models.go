// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package paginggroup

import (
	"context"
	"net/http"
	"time"
)

// CustomParameterGroup contains a group of parameters for the Paging.GetMultiplePagesFragmentWithGroupingNextLink method.
type CustomParameterGroup struct {
	// Sets the api version to use.
	ApiVersion string
	// Sets the tenant to use.
	Tenant string
}

type OdataProductResult struct {
	OdataNextLink *string    `json:"odata.nextLink,omitempty"`
	Values        *[]Product `json:"values,omitempty"`
}

// OdataProductResultResponse is the response envelope for operations that return a OdataProductResult type.
type OdataProductResultResponse struct {
	OdataProductResult *OdataProductResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type OperationResult struct {
	// The status of the request
	Status *OperationResultStatus `json:"status,omitempty"`
}

// PagingGetMultiplePagesFailureOptions contains the optional parameters for the Paging.GetMultiplePagesFailure method.
type PagingGetMultiplePagesFailureOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesFailureURIOptions contains the optional parameters for the Paging.GetMultiplePagesFailureURI method.
type PagingGetMultiplePagesFailureURIOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesFragmentNextLinkOptions contains the optional parameters for the Paging.GetMultiplePagesFragmentNextLink
// method.
type PagingGetMultiplePagesFragmentNextLinkOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesFragmentWithGroupingNextLinkOptions contains the optional parameters for the Paging.GetMultiplePagesFragmentWithGroupingNextLink
// method.
type PagingGetMultiplePagesFragmentWithGroupingNextLinkOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesLroOptions contains the optional parameters for the Paging.GetMultiplePagesLro method.
type PagingGetMultiplePagesLroOptions struct {
	ClientRequestId *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingGetMultiplePagesOptions contains the optional parameters for the Paging.GetMultiplePages method.
type PagingGetMultiplePagesOptions struct {
	ClientRequestId *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingGetMultiplePagesRetryFirstOptions contains the optional parameters for the Paging.GetMultiplePagesRetryFirst method.
type PagingGetMultiplePagesRetryFirstOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesRetrySecondOptions contains the optional parameters for the Paging.GetMultiplePagesRetrySecond method.
type PagingGetMultiplePagesRetrySecondOptions struct {
	// placeholder for future optional parameters
}

// PagingGetMultiplePagesWithOffsetOptions contains the optional parameters for the Paging.GetMultiplePagesWithOffset method.
type PagingGetMultiplePagesWithOffsetOptions struct {
	ClientRequestId *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Offset of return value
	Offset int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingGetNoItemNamePagesOptions contains the optional parameters for the Paging.GetNoItemNamePages method.
type PagingGetNoItemNamePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingGetNullNextLinkNamePagesOptions contains the optional parameters for the Paging.GetNullNextLinkNamePages method.
type PagingGetNullNextLinkNamePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingGetOdataMultiplePagesOptions contains the optional parameters for the Paging.GetOdataMultiplePages method.
type PagingGetOdataMultiplePagesOptions struct {
	ClientRequestId *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingGetPagingModelWithItemNameWithXmsClientNameOptions contains the optional parameters for the Paging.GetPagingModelWithItemNameWithXmsClientName
// method.
type PagingGetPagingModelWithItemNameWithXmsClientNameOptions struct {
	// placeholder for future optional parameters
}

// PagingGetSinglePagesFailureOptions contains the optional parameters for the Paging.GetSinglePagesFailure method.
type PagingGetSinglePagesFailureOptions struct {
	// placeholder for future optional parameters
}

// PagingGetSinglePagesOptions contains the optional parameters for the Paging.GetSinglePages method.
type PagingGetSinglePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingGetWithQueryParamsOptions contains the optional parameters for the Paging.GetWithQueryParams method.
type PagingGetWithQueryParamsOptions struct {
	// placeholder for future optional parameters
}

type Product struct {
	Properties *ProductProperties `json:"properties,omitempty"`
}

type ProductProperties struct {
	ID   *int32  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

type ProductResult struct {
	NextLink *string    `json:"nextLink,omitempty"`
	Values   *[]Product `json:"values,omitempty"`
}

// ProductResultPagerPollerResponse is the response envelope for operations that asynchronously return a ProductResultPager
// type.
type ProductResultPagerPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ProductResultPager, error)

	// Poller contains an initialized poller.
	Poller ProductResultPagerPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductResultResponse is the response envelope for operations that return a ProductResult type.
type ProductResultResponse struct {
	ProductResult *ProductResult

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type ProductResultValue struct {
	NextLink *string    `json:"nextLink,omitempty"`
	Value    *[]Product `json:"value,omitempty"`
}

// ProductResultValueResponse is the response envelope for operations that return a ProductResultValue type.
type ProductResultValueResponse struct {
	ProductResultValue *ProductResultValue

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type ProductResultValueWithXmsClientName struct {
	Indexes  *[]Product `json:"values,omitempty"`
	NextLink *string    `json:"nextLink,omitempty"`
}

// ProductResultValueWithXmsClientNameResponse is the response envelope for operations that return a ProductResultValueWithXmsClientName
// type.
type ProductResultValueWithXmsClientNameResponse struct {
	ProductResultValueWithXmsClientName *ProductResultValueWithXmsClientName

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}
