// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package validationgroup

import (
	"fmt"
	"net/http"
)

// The product documentation.
type ChildProduct struct {
	// Constant string
	ConstProperty *string `json:"constProperty,omitempty"`

	// Count
	Count *int32 `json:"count,omitempty"`
}

// The product documentation.
type ConstantProduct struct {
	// Constant string
	ConstProperty *string `json:"constProperty,omitempty"`

	// Constant string2
	ConstProperty2 *string `json:"constProperty2,omitempty"`
}

type Error struct {
	Code    *int32  `json:"code,omitempty"`
	Fields  *string `json:"fields,omitempty"`
	Message *string `json:"message,omitempty"`
}

func (e Error) Error() string {
	msg := ""
	if e.Code != nil {
		msg += fmt.Sprintf("Code: %v\n", *e.Code)
	}
	if e.Fields != nil {
		msg += fmt.Sprintf("Fields: %v\n", *e.Fields)
	}
	if e.Message != nil {
		msg += fmt.Sprintf("Message: %v\n", *e.Message)
	}
	if msg == "" {
		msg = "missing error info"
	}
	return msg
}

// OperationsPostWithConstantInBodyOptions contains the optional parameters for the Operations.PostWithConstantInBody method.
type OperationsPostWithConstantInBodyOptions struct {
	Body *Product
}

// OperationsValidationOfBodyOptions contains the optional parameters for the Operations.ValidationOfBody method.
type OperationsValidationOfBodyOptions struct {
	Body *Product
}

// The product documentation.
type Product struct {
	// Non required int betwen 0 and 100 exclusive.
	Capacity *int32 `json:"capacity,omitempty"`

	// The product documentation.
	Child *ChildProduct `json:"child,omitempty"`

	// The product documentation.
	ConstChild *ConstantProduct `json:"constChild,omitempty"`

	// Constant int
	ConstInt *int32 `json:"constInt,omitempty"`

	// Constant string
	ConstString *string `json:"constString,omitempty"`

	// Constant string as Enum
	ConstStringAsEnum *string `json:"constStringAsEnum,omitempty"`

	// Non required array of unique items from 0 to 6 elements.
	DisplayNames *[]string `json:"display_names,omitempty"`

	// Image URL representing the product.
	Image *string `json:"image,omitempty"`
}

// ProductResponse is the response envelope for operations that return a Product type.
type ProductResponse struct {
	// The product documentation.
	Product *Product

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}
