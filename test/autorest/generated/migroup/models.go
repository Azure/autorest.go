// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package migroup

import (
	"fmt"
	"net/http"
)

type Cat struct {
	Feline
	Pet
	LikesMilk *bool `json:"likesMilk,omitempty"`
}

// CatResponse is the response envelope for operations that return a Cat type.
type CatResponse struct {
	Cat *Cat

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Error struct {
	Message *string `json:"message,omitempty"`
	Status  *int32  `json:"status,omitempty"`
}

func (e Error) Error() string {
	msg := ""
	if e.Message != nil {
		msg += fmt.Sprintf("Message: %v\n", *e.Message)
	}
	if e.Status != nil {
		msg += fmt.Sprintf("Status: %v\n", *e.Status)
	}
	if msg == "" {
		msg = "missing error info"
	}
	return msg
}

type Feline struct {
	Hisses *bool `json:"hisses,omitempty"`
	Meows  *bool `json:"meows,omitempty"`
}

// FelineResponse is the response envelope for operations that return a Feline type.
type FelineResponse struct {
	Feline *Feline

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Horse struct {
	Pet
	IsAShowHorse *bool `json:"isAShowHorse,omitempty"`
}

// HorseResponse is the response envelope for operations that return a Horse type.
type HorseResponse struct {
	Horse *Horse

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Kitten struct {
	Cat
	EatsMiceYet *bool `json:"eatsMiceYet,omitempty"`
}

// KittenResponse is the response envelope for operations that return a Kitten type.
type KittenResponse struct {
	Kitten *Kitten

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Pet struct {
	Name *string `json:"name,omitempty"`
}

// PetResponse is the response envelope for operations that return a Pet type.
type PetResponse struct {
	Pet *Pet

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// StringResponse is the response envelope for operations that return a string type.
type StringResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	Value       *string
}
