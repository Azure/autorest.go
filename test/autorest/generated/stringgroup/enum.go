// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package stringgroup

import (
	"context"
	azinternal "generatortests/autorest/generated/stringgroup/internal/stringgroup"
)

// EnumOperations contains the methods for the Enum group.
type EnumOperations interface {
	// GetNotExpandable - Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'. 
	GetNotExpandable(ctx context.Context) (*EnumGetNotExpandableResponse, error)
	// GetReferenced - Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'. 
	GetReferenced(ctx context.Context) (*EnumGetReferencedResponse, error)
	// GetReferencedConstant - Get value 'green-color' from the constant. 
	GetReferencedConstant(ctx context.Context) (*EnumGetReferencedConstantResponse, error)
	// PutNotExpandable - Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color' 
	PutNotExpandable(ctx context.Context, stringBody Colors) (*EnumPutNotExpandableResponse, error)
	// PutReferenced - Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color' 
	PutReferenced(ctx context.Context, enumStringBody Colors) (*EnumPutReferencedResponse, error)
	// PutReferencedConstant - Sends value 'green-color' from a constant 
	PutReferencedConstant(ctx context.Context, enumStringBody RefColorConstant) (*EnumPutReferencedConstantResponse, error)
}

type enumOperations struct {
	*Client
	azinternal.EnumOperations
}

// GetNotExpandable - Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'. 
func (client *enumOperations) GetNotExpandable(ctx context.Context) (*EnumGetNotExpandableResponse, error) {
	req, err := client.GetNotExpandableCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetNotExpandableHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetReferenced - Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'. 
func (client *enumOperations) GetReferenced(ctx context.Context) (*EnumGetReferencedResponse, error) {
	req, err := client.GetReferencedCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetReferencedHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetReferencedConstant - Get value 'green-color' from the constant. 
func (client *enumOperations) GetReferencedConstant(ctx context.Context) (*EnumGetReferencedConstantResponse, error) {
	req, err := client.GetReferencedConstantCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetReferencedConstantHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutNotExpandable - Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color' 
func (client *enumOperations) PutNotExpandable(ctx context.Context, stringBody Colors) (*EnumPutNotExpandableResponse, error) {
	req, err := client.PutNotExpandableCreateRequest(*client.u, stringBody)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutNotExpandableHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutReferenced - Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color' 
func (client *enumOperations) PutReferenced(ctx context.Context, enumStringBody Colors) (*EnumPutReferencedResponse, error) {
	req, err := client.PutReferencedCreateRequest(*client.u, enumStringBody)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutReferencedHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutReferencedConstant - Sends value 'green-color' from a constant 
func (client *enumOperations) PutReferencedConstant(ctx context.Context, enumStringBody RefColorConstant) (*EnumPutReferencedConstantResponse, error) {
	req, err := client.PutReferencedConstantCreateRequest(*client.u, enumStringBody)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutReferencedConstantHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

var _ EnumOperations = (*enumOperations)(nil)
