// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package xmlgroup

import azinternal "generatortests/autorest/generated/xmlgroup/internal/xmlgroup"

type AccessTier = azinternal.AccessTier

const (
	AccessTierArchive = azinternal.AccessTierArchive
	AccessTierCool    = azinternal.AccessTierCool
	AccessTierHot     = azinternal.AccessTierHot
	AccessTierP10     = azinternal.AccessTierP10
	AccessTierP20     = azinternal.AccessTierP20
	AccessTierP30     = azinternal.AccessTierP30
	AccessTierP4      = azinternal.AccessTierP4
	AccessTierP40     = azinternal.AccessTierP40
	AccessTierP50     = azinternal.AccessTierP50
	AccessTierP6      = azinternal.AccessTierP6
)

func PossibleAccessTierValues() []AccessTier {
	return azinternal.PossibleAccessTierValues()
}

type ArchiveStatus = azinternal.ArchiveStatus

const (
	ArchiveStatusRehydratePendingToCool = azinternal.ArchiveStatusRehydratePendingToCool
	ArchiveStatusRehydratePendingToHot  = azinternal.ArchiveStatusRehydratePendingToHot
)

func PossibleArchiveStatusValues() []ArchiveStatus {
	return azinternal.PossibleArchiveStatusValues()
}

type BlobType = azinternal.BlobType

const (
	BlobTypeBlockblob  = azinternal.BlobTypeBlockblob
	BlobTypePageblob   = azinternal.BlobTypePageblob
	BlobTypeAppendblob = azinternal.BlobTypeAppendblob
)

func PossibleBlobTypeValues() []BlobType {
	return azinternal.PossibleBlobTypeValues()
}

type CopyStatusType = azinternal.CopyStatusType

const (
	CopyStatusTypePending = azinternal.CopyStatusTypePending
	CopyStatusTypeSuccess = azinternal.CopyStatusTypeSuccess
	CopyStatusTypeAborted = azinternal.CopyStatusTypeAborted
	CopyStatusTypeFailed  = azinternal.CopyStatusTypeFailed
)

func PossibleCopyStatusTypeValues() []CopyStatusType {
	return azinternal.PossibleCopyStatusTypeValues()
}

type LeaseDurationType = azinternal.LeaseDurationType

const (
	LeaseDurationTypeInfinite = azinternal.LeaseDurationTypeInfinite
	LeaseDurationTypeFixed    = azinternal.LeaseDurationTypeFixed
)

func PossibleLeaseDurationTypeValues() []LeaseDurationType {
	return azinternal.PossibleLeaseDurationTypeValues()
}

type LeaseStateType = azinternal.LeaseStateType

const (
	LeaseStateTypeAvailable = azinternal.LeaseStateTypeAvailable
	LeaseStateTypeLeased    = azinternal.LeaseStateTypeLeased
	LeaseStateTypeExpired   = azinternal.LeaseStateTypeExpired
	LeaseStateTypeBreaking  = azinternal.LeaseStateTypeBreaking
	LeaseStateTypeBroken    = azinternal.LeaseStateTypeBroken
)

func PossibleLeaseStateTypeValues() []LeaseStateType {
	return azinternal.PossibleLeaseStateTypeValues()
}

type LeaseStatusType = azinternal.LeaseStatusType

const (
	LeaseStatusTypeLocked   = azinternal.LeaseStatusTypeLocked
	LeaseStatusTypeUnlocked = azinternal.LeaseStatusTypeUnlocked
)

func PossibleLeaseStatusTypeValues() []LeaseStatusType {
	return azinternal.PossibleLeaseStatusTypeValues()
}

type PublicAccessType = azinternal.PublicAccessType

const (
	PublicAccessTypeBlob      = azinternal.PublicAccessTypeBlob
	PublicAccessTypeContainer = azinternal.PublicAccessTypeContainer
)

func PossiblePublicAccessTypeValues() []PublicAccessType {
	return azinternal.PossiblePublicAccessTypeValues()
}
