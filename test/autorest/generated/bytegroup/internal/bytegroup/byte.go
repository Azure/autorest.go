// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package bytegroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"net/http"
	"net/url"
	"path"
)

type ByteOperations struct{}

// GetEmptyCreateRequest creates the GetEmpty request.
func (ByteOperations) GetEmptyCreateRequest(u url.URL) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/byte/empty")
	return azcore.NewRequest(http.MethodGet, u), nil
}

// GetEmptyHandleResponse handles the GetEmpty response.
func (ByteOperations) GetEmptyHandleResponse(resp *azcore.Response) (*ByteGetEmptyResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	result := ByteGetEmptyResponse{RawResponse: resp.Response}
	return &result, resp.UnmarshalAsJSON(&result.Value)
}

// GetInvalidCreateRequest creates the GetInvalid request.
func (ByteOperations) GetInvalidCreateRequest(u url.URL) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/byte/invalid")
	return azcore.NewRequest(http.MethodGet, u), nil
}

// GetInvalidHandleResponse handles the GetInvalid response.
func (ByteOperations) GetInvalidHandleResponse(resp *azcore.Response) (*ByteGetInvalidResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	result := ByteGetInvalidResponse{RawResponse: resp.Response}
	return &result, resp.UnmarshalAsJSON(&result.Value)
}

// GetNonASCIICreateRequest creates the GetNonASCII request.
func (ByteOperations) GetNonASCIICreateRequest(u url.URL) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/byte/nonAscii")
	return azcore.NewRequest(http.MethodGet, u), nil
}

// GetNonASCIIHandleResponse handles the GetNonASCII response.
func (ByteOperations) GetNonASCIIHandleResponse(resp *azcore.Response) (*ByteGetNonASCIIResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	result := ByteGetNonASCIIResponse{RawResponse: resp.Response}
	return &result, resp.UnmarshalAsJSON(&result.Value)
}

// GetNullCreateRequest creates the GetNull request.
func (ByteOperations) GetNullCreateRequest(u url.URL) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/byte/null")
	return azcore.NewRequest(http.MethodGet, u), nil
}

// GetNullHandleResponse handles the GetNull response.
func (ByteOperations) GetNullHandleResponse(resp *azcore.Response) (*ByteGetNullResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	result := ByteGetNullResponse{RawResponse: resp.Response}
	return &result, resp.UnmarshalAsJSON(&result.Value)
}

// PutNonASCIICreateRequest creates the PutNonASCII request.
func (ByteOperations) PutNonASCIICreateRequest(u url.URL, byteBody []byte) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/byte/nonAscii")
	req := azcore.NewRequest(http.MethodPut, u)
	err := req.MarshalAsJSON(byteBody)
	if err != nil {
		return nil, err
	}
	return req, nil
}

// PutNonASCIIHandleResponse handles the PutNonASCII response.
func (ByteOperations) PutNonASCIIHandleResponse(resp *azcore.Response) (*BytePutNonASCIIResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	return &BytePutNonASCIIResponse{RawResponse: resp.Response}, nil
}
