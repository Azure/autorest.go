// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package booleangroup

import (
	"context"
	azinternal "generatortests/autorest/generated/booleangroup/internal/booleangroup"
)

// BoolOperations contains the methods for the Bool group.
type BoolOperations interface {
	// GetFalse - Get false Boolean value 
	GetFalse(ctx context.Context) (*BoolGetFalseResponse, error)
	// GetInvalid - Get invalid Boolean value 
	GetInvalid(ctx context.Context) (*BoolGetInvalidResponse, error)
	// GetNull - Get null Boolean value 
	GetNull(ctx context.Context) (*BoolGetNullResponse, error)
	// GetTrue - Get true Boolean value 
	GetTrue(ctx context.Context) (*BoolGetTrueResponse, error)
	// PutFalse - Set Boolean value false 
	PutFalse(ctx context.Context) (*BoolPutFalseResponse, error)
	// PutTrue - Set Boolean value true 
	PutTrue(ctx context.Context) (*BoolPutTrueResponse, error)
}

type boolOperations struct {
	*Client
	azinternal.BoolOperations
}

// GetFalse - Get false Boolean value 
func (client *boolOperations) GetFalse(ctx context.Context) (*BoolGetFalseResponse, error) {
	req, err := client.GetFalseCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetFalseHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetInvalid - Get invalid Boolean value 
func (client *boolOperations) GetInvalid(ctx context.Context) (*BoolGetInvalidResponse, error) {
	req, err := client.GetInvalidCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetInvalidHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetNull - Get null Boolean value 
func (client *boolOperations) GetNull(ctx context.Context) (*BoolGetNullResponse, error) {
	req, err := client.GetNullCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetNullHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetTrue - Get true Boolean value 
func (client *boolOperations) GetTrue(ctx context.Context) (*BoolGetTrueResponse, error) {
	req, err := client.GetTrueCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetTrueHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutFalse - Set Boolean value false 
func (client *boolOperations) PutFalse(ctx context.Context) (*BoolPutFalseResponse, error) {
	req, err := client.PutFalseCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutFalseHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutTrue - Set Boolean value true 
func (client *boolOperations) PutTrue(ctx context.Context) (*BoolPutTrueResponse, error) {
	req, err := client.PutTrueCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutTrueHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

var _ BoolOperations = (*boolOperations)(nil)
