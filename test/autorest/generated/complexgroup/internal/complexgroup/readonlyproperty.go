// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package complexgroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"net/http"
	"net/url"
	"path"
)

type ReadonlypropertyOperations struct{}

// GetValidCreateRequest creates the GetValid request.
func (ReadonlypropertyOperations) GetValidCreateRequest(u url.URL) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/complex/readonlyproperty/valid")
	return azcore.NewRequest(http.MethodGet, u), nil
}

// GetValidHandleResponse handles the GetValid response.
func (ReadonlypropertyOperations) GetValidHandleResponse(resp *azcore.Response) (*ReadonlypropertyGetValidResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	result := ReadonlypropertyGetValidResponse{StatusCode: resp.StatusCode}
	return &result, resp.UnmarshalAsJSON(&result.ReadonlyObj)
}

// PutValidCreateRequest creates the PutValid request.
func (ReadonlypropertyOperations) PutValidCreateRequest(u url.URL, complexBody ReadonlyObj) (*azcore.Request, error) {
	u.Path = path.Join(u.Path, "/complex/readonlyproperty/valid")
	req := azcore.NewRequest(http.MethodPut, u)
	err := req.MarshalAsJSON(complexBody)
	if err != nil {
		return nil, err
	}
	return req, nil
}

// PutValidHandleResponse handles the PutValid response.
func (ReadonlypropertyOperations) PutValidHandleResponse(resp *azcore.Response) (*ReadonlypropertyPutValidResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	return &ReadonlypropertyPutValidResponse{StatusCode: resp.StatusCode}, nil
}

