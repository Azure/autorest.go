// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package complexgroup

import (
	"context"
	azinternal "generatortests/autorest/generated/complexgroup/internal/complexgroup"
)

// InheritanceOperations contains the methods for the Inheritance group.
type InheritanceOperations interface {
	// GetValid - Get complex types that extend others 
	GetValid(ctx context.Context) (*InheritanceGetValidResponse, error)
	// PutValid - Put complex types that extend others 
	PutValid(ctx context.Context, complexBody Siamese) (*InheritancePutValidResponse, error)
}

type inheritanceOperations struct {
	*Client
	azinternal.InheritanceOperations
}

// GetValid - Get complex types that extend others 
func (client *inheritanceOperations) GetValid(ctx context.Context) (*InheritanceGetValidResponse, error) {
	req, err := client.GetValidCreateRequest(*client.u)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetValidHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// PutValid - Put complex types that extend others 
func (client *inheritanceOperations) PutValid(ctx context.Context, complexBody Siamese) (*InheritancePutValidResponse, error) {
	req, err := client.PutValidCreateRequest(*client.u, complexBody)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.PutValidHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

var _ InheritanceOperations = (*inheritanceOperations)(nil)
