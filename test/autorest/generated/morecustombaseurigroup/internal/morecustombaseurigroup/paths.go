// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package morecustombaseurigroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"net/http"
	"net/url"
	"path"
	"strings"
)

type PathsOperations struct{}

// GetEmptyCreateRequest creates the GetEmpty request.
func (PathsOperations) GetEmptyCreateRequest(u url.URL, vault string, secret string, dnsSuffix string, keyName string, subscriptionID string, options *PathsGetEmptyOptions) (*azcore.Request, error) {
	urlPath := "/customuri/{subscriptionId}/{keyName}"
	urlPath = strings.ReplaceAll(urlPath, "{keyName}", url.PathEscape(keyName))
	urlPath = strings.ReplaceAll(urlPath, "{subscriptionId}", url.PathEscape(subscriptionID))
	u.Path = path.Join(u.Path, urlPath)
	query := u.Query()
	if options != nil && options.KeyVersion != nil {
		query.Set("keyVersion", *options.KeyVersion)
	}
	u.RawQuery = query.Encode()
	req := azcore.NewRequest(http.MethodGet, u)
	return req, nil
}

// GetEmptyHandleResponse handles the GetEmpty response.
func (PathsOperations) GetEmptyHandleResponse(resp *azcore.Response) (*PathsGetEmptyResponse, error) {
	if !resp.HasStatusCode(http.StatusOK) {
		return nil, newError(resp)
	}
	return &PathsGetEmptyResponse{RawResponse: resp.Response}, nil
}
