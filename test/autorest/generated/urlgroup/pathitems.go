// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package urlgroup

import (
	"context"
	azinternal "generatortests/autorest/generated/urlgroup/internal/urlgroup"
)

// PathItemsOperations contains the methods for the PathItems group.
type PathItemsOperations interface {
	// GetAllWithValues - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
	GetAllWithValues(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetAllWithValuesResponse, error)
	// GetGlobalAndLocalQueryNull - send globalStringPath=globalStringPath, pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery=null, pathItemStringQuery='pathItemStringQuery', localStringQuery=null
	GetGlobalAndLocalQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetGlobalAndLocalQueryNullResponse, error)
	// GetGlobalQueryNull - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery=null, pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
	GetGlobalQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetGlobalQueryNullResponse, error)
	// GetLocalPathItemQueryNull - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery=null, localStringQuery=null
	GetLocalPathItemQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetLocalPathItemQueryNullResponse, error)
}

type pathItemsOperations struct {
	*Client
	azinternal.PathItemsOperations
}

// GetAllWithValues - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
func (client *pathItemsOperations) GetAllWithValues(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetAllWithValuesResponse, error) {
	req, err := client.GetAllWithValuesCreateRequest(*client.u, pathItemStringPath, pathItemStringQuery, localStringPath, localStringQuery, globalStringQuery)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetAllWithValuesHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetGlobalAndLocalQueryNull - send globalStringPath=globalStringPath, pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery=null, pathItemStringQuery='pathItemStringQuery', localStringQuery=null
func (client *pathItemsOperations) GetGlobalAndLocalQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetGlobalAndLocalQueryNullResponse, error) {
	req, err := client.GetGlobalAndLocalQueryNullCreateRequest(*client.u, pathItemStringPath, pathItemStringQuery, localStringPath, localStringQuery, globalStringQuery)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetGlobalAndLocalQueryNullHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetGlobalQueryNull - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery=null, pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
func (client *pathItemsOperations) GetGlobalQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetGlobalQueryNullResponse, error) {
	req, err := client.GetGlobalQueryNullCreateRequest(*client.u, pathItemStringPath, pathItemStringQuery, localStringPath, localStringQuery, globalStringQuery)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetGlobalQueryNullHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// GetLocalPathItemQueryNull - send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath', localStringPath='localStringPath', globalStringQuery='globalStringQuery', pathItemStringQuery=null, localStringQuery=null
func (client *pathItemsOperations) GetLocalPathItemQueryNull(ctx context.Context, pathItemStringPath string, pathItemStringQuery string, localStringPath string, localStringQuery string, globalStringQuery string) (*PathItemsGetLocalPathItemQueryNullResponse, error) {
	req, err := client.GetLocalPathItemQueryNullCreateRequest(*client.u, pathItemStringPath, pathItemStringQuery, localStringPath, localStringQuery, globalStringQuery)
	if err != nil {
		return nil, err
	}
	resp, err := client.p.Do(ctx, req)
	if err != nil {
		return nil, err
	}
	result, err := client.GetLocalPathItemQueryNullHandleResponse(resp)
	if err != nil {
		return nil, err
	}
	return result, nil
}

var _ PathItemsOperations = (*pathItemsOperations)(nil)
