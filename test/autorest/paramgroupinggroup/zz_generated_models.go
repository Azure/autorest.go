// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package paramgroupinggroup

import "fmt"

type Error struct {
	Message *string `json:"message,omitempty"`
	Status  *int32  `json:"status,omitempty"`
}

// Error implements the error interface for type Error.
func (e Error) Error() string {
	msg := ""
	if e.Message != nil {
		msg += fmt.Sprintf("Message: %v\n", *e.Message)
	}
	if e.Status != nil {
		msg += fmt.Sprintf("Status: %v\n", *e.Status)
	}
	if msg == "" {
		msg = "missing error info"
	}
	return msg
}

// FirstParameterGroup contains a group of parameters for the ParameterGrouping.PostMultiParamGroups method.
type FirstParameterGroup struct {
	HeaderOne *string
	// Query parameter with default
	QueryOne *int32
}

// ParameterGroupingPostMultiParamGroupsSecondParamGroup contains a group of parameters for the ParameterGrouping.PostMultiParamGroups
// method.
type ParameterGroupingPostMultiParamGroupsSecondParamGroup struct {
	HeaderTwo *string
	// Query parameter with default
	QueryTwo *int32
}

// ParameterGroupingPostOptionalParameters contains a group of parameters for the ParameterGrouping.PostOptional method.
type ParameterGroupingPostOptionalParameters struct {
	CustomHeader *string
	// Query parameter with default
	Query *int32
}

// ParameterGroupingPostRequiredParameters contains a group of parameters for the ParameterGrouping.PostRequired method.
type ParameterGroupingPostRequiredParameters struct {
	Body         int32
	CustomHeader *string
	// Path parameter
	PathParameter string
	// Query parameter with default
	Query *int32
}
