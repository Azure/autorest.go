//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package validationgroup

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
)

// MarshalJSON implements the json.Marshaller interface for type ChildProduct.
func (c ChildProduct) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap["constProperty"] = "constant"
	populate(objectMap, "count", c.Count)
	return json.Marshal(objectMap)
}

// MarshalJSON implements the json.Marshaller interface for type ConstantProduct.
func (c ConstantProduct) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap["constProperty"] = "constant"
	objectMap["constProperty2"] = "constant2"
	return json.Marshal(objectMap)
}

// MarshalJSON implements the json.Marshaller interface for type Product.
func (p Product) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "capacity", p.Capacity)
	populate(objectMap, "child", p.Child)
	populate(objectMap, "constChild", p.ConstChild)
	objectMap["constInt"] = 0
	objectMap["constString"] = "constant"
	objectMap["constStringAsEnum"] = "constant_string_as_enum"
	populate(objectMap, "display_names", p.DisplayNames)
	populate(objectMap, "image", p.Image)
	return json.Marshal(objectMap)
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}
