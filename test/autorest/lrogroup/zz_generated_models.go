// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package lrogroup

import (
	"context"
	"fmt"
	"net/http"
	"time"
)

type CloudError struct {
	Code    *int32  `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// Error implements the error interface for type CloudError.
func (e CloudError) Error() string {
	msg := ""
	if e.Code != nil {
		msg += fmt.Sprintf("Code: %v\n", *e.Code)
	}
	if e.Message != nil {
		msg += fmt.Sprintf("Message: %v\n", *e.Message)
	}
	if msg == "" {
		msg = "missing error info"
	}
	return msg
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LrOSBeginDelete202NoRetry204Options contains the optional parameters for the LrOS.BeginDelete202NoRetry204 method.
type LrOSBeginDelete202NoRetry204Options struct {
	// placeholder for future optional parameters
}

// LrOSBeginDelete202Retry200Options contains the optional parameters for the LrOS.BeginDelete202Retry200 method.
type LrOSBeginDelete202Retry200Options struct {
	// placeholder for future optional parameters
}

// LrOSBeginDelete204SucceededOptions contains the optional parameters for the LrOS.BeginDelete204Succeeded method.
type LrOSBeginDelete204SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteAsyncNoHeaderInRetryOptions contains the optional parameters for the LrOS.BeginDeleteAsyncNoHeaderInRetry method.
type LrOSBeginDeleteAsyncNoHeaderInRetryOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.BeginDeleteAsyncNoRetrySucceeded method.
type LrOSBeginDeleteAsyncNoRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteAsyncRetryFailedOptions contains the optional parameters for the LrOS.BeginDeleteAsyncRetryFailed method.
type LrOSBeginDeleteAsyncRetryFailedOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteAsyncRetrySucceededOptions contains the optional parameters for the LrOS.BeginDeleteAsyncRetrySucceeded method.
type LrOSBeginDeleteAsyncRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteAsyncRetrycanceledOptions contains the optional parameters for the LrOS.BeginDeleteAsyncRetrycanceled method.
type LrOSBeginDeleteAsyncRetrycanceledOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteNoHeaderInRetryOptions contains the optional parameters for the LrOS.BeginDeleteNoHeaderInRetry method.
type LrOSBeginDeleteNoHeaderInRetryOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteProvisioning202Accepted200SucceededOptions contains the optional parameters for the LrOS.BeginDeleteProvisioning202Accepted200Succeeded
// method.
type LrOSBeginDeleteProvisioning202Accepted200SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteProvisioning202DeletingFailed200Options contains the optional parameters for the LrOS.BeginDeleteProvisioning202DeletingFailed200 method.
type LrOSBeginDeleteProvisioning202DeletingFailed200Options struct {
	// placeholder for future optional parameters
}

// LrOSBeginDeleteProvisioning202Deletingcanceled200Options contains the optional parameters for the LrOS.BeginDeleteProvisioning202Deletingcanceled200
// method.
type LrOSBeginDeleteProvisioning202Deletingcanceled200Options struct {
	// placeholder for future optional parameters
}

// LrOSBeginPost200WithPayloadOptions contains the optional parameters for the LrOS.BeginPost200WithPayload method.
type LrOSBeginPost200WithPayloadOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginPost202ListOptions contains the optional parameters for the LrOS.BeginPost202List method.
type LrOSBeginPost202ListOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginPost202NoRetry204Options contains the optional parameters for the LrOS.BeginPost202NoRetry204 method.
type LrOSBeginPost202NoRetry204Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPost202Retry200Options contains the optional parameters for the LrOS.BeginPost202Retry200 method.
type LrOSBeginPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPostAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.BeginPostAsyncNoRetrySucceeded method.
type LrOSBeginPostAsyncNoRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPostAsyncRetryFailedOptions contains the optional parameters for the LrOS.BeginPostAsyncRetryFailed method.
type LrOSBeginPostAsyncRetryFailedOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPostAsyncRetrySucceededOptions contains the optional parameters for the LrOS.BeginPostAsyncRetrySucceeded method.
type LrOSBeginPostAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPostAsyncRetrycanceledOptions contains the optional parameters for the LrOS.BeginPostAsyncRetrycanceled method.
type LrOSBeginPostAsyncRetrycanceledOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPostDoubleHeadersFinalAzureHeaderGetDefaultOptions contains the optional parameters for the LrOS.BeginPostDoubleHeadersFinalAzureHeaderGetDefault
// method.
type LrOSBeginPostDoubleHeadersFinalAzureHeaderGetDefaultOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginPostDoubleHeadersFinalAzureHeaderGetOptions contains the optional parameters for the LrOS.BeginPostDoubleHeadersFinalAzureHeaderGet method.
type LrOSBeginPostDoubleHeadersFinalAzureHeaderGetOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginPostDoubleHeadersFinalLocationGetOptions contains the optional parameters for the LrOS.BeginPostDoubleHeadersFinalLocationGet method.
type LrOSBeginPostDoubleHeadersFinalLocationGetOptions struct {
	// placeholder for future optional parameters
}

// LrOSBeginPut200Acceptedcanceled200Options contains the optional parameters for the LrOS.BeginPut200Acceptedcanceled200 method.
type LrOSBeginPut200Acceptedcanceled200Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut200SucceededNoStateOptions contains the optional parameters for the LrOS.BeginPut200SucceededNoState method.
type LrOSBeginPut200SucceededNoStateOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut200SucceededOptions contains the optional parameters for the LrOS.BeginPut200Succeeded method.
type LrOSBeginPut200SucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut200UpdatingSucceeded204Options contains the optional parameters for the LrOS.BeginPut200UpdatingSucceeded204 method.
type LrOSBeginPut200UpdatingSucceeded204Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut201CreatingFailed200Options contains the optional parameters for the LrOS.BeginPut201CreatingFailed200 method.
type LrOSBeginPut201CreatingFailed200Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut201CreatingSucceeded200Options contains the optional parameters for the LrOS.BeginPut201CreatingSucceeded200 method.
type LrOSBeginPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut201SucceededOptions contains the optional parameters for the LrOS.BeginPut201Succeeded method.
type LrOSBeginPut201SucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPut202Retry200Options contains the optional parameters for the LrOS.BeginPut202Retry200 method.
type LrOSBeginPut202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncNoHeaderInRetryOptions contains the optional parameters for the LrOS.BeginPutAsyncNoHeaderInRetry method.
type LrOSBeginPutAsyncNoHeaderInRetryOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.BeginPutAsyncNoRetrySucceeded method.
type LrOSBeginPutAsyncNoRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncNoRetrycanceledOptions contains the optional parameters for the LrOS.BeginPutAsyncNoRetrycanceled method.
type LrOSBeginPutAsyncNoRetrycanceledOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncNonResourceOptions contains the optional parameters for the LrOS.BeginPutAsyncNonResource method.
type LrOSBeginPutAsyncNonResourceOptions struct {
	// Sku to put
	Sku *SKU
}

// LrOSBeginPutAsyncRetryFailedOptions contains the optional parameters for the LrOS.BeginPutAsyncRetryFailed method.
type LrOSBeginPutAsyncRetryFailedOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncRetrySucceededOptions contains the optional parameters for the LrOS.BeginPutAsyncRetrySucceeded method.
type LrOSBeginPutAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutAsyncSubResourceOptions contains the optional parameters for the LrOS.BeginPutAsyncSubResource method.
type LrOSBeginPutAsyncSubResourceOptions struct {
	// Sub Product to put
	Product *SubProduct
}

// LrOSBeginPutNoHeaderInRetryOptions contains the optional parameters for the LrOS.BeginPutNoHeaderInRetry method.
type LrOSBeginPutNoHeaderInRetryOptions struct {
	// Product to put
	Product *Product
}

// LrOSBeginPutNonResourceOptions contains the optional parameters for the LrOS.BeginPutNonResource method.
type LrOSBeginPutNonResourceOptions struct {
	// sku to put
	Sku *SKU
}

// LrOSBeginPutSubResourceOptions contains the optional parameters for the LrOS.BeginPutSubResource method.
type LrOSBeginPutSubResourceOptions struct {
	// Sub Product to put
	Product *SubProduct
}

// LrOSCustomHeaderBeginPost202Retry200Options contains the optional parameters for the LrOSCustomHeader.BeginPost202Retry200 method.
type LrOSCustomHeaderBeginPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderBeginPostAsyncRetrySucceededOptions contains the optional parameters for the LrOSCustomHeader.BeginPostAsyncRetrySucceeded method.
type LrOSCustomHeaderBeginPostAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderBeginPut201CreatingSucceeded200Options contains the optional parameters for the LrOSCustomHeader.BeginPut201CreatingSucceeded200 method.
type LrOSCustomHeaderBeginPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderBeginPutAsyncRetrySucceededOptions contains the optional parameters for the LrOSCustomHeader.BeginPutAsyncRetrySucceeded method.
type LrOSCustomHeaderBeginPutAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LroRetrysBeginDelete202Retry200Options contains the optional parameters for the LroRetrys.BeginDelete202Retry200 method.
type LroRetrysBeginDelete202Retry200Options struct {
	// placeholder for future optional parameters
}

// LroRetrysBeginDeleteAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.BeginDeleteAsyncRelativeRetrySucceeded method.
type LroRetrysBeginDeleteAsyncRelativeRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LroRetrysBeginDeleteProvisioning202Accepted200SucceededOptions contains the optional parameters for the LroRetrys.BeginDeleteProvisioning202Accepted200Succeeded
// method.
type LroRetrysBeginDeleteProvisioning202Accepted200SucceededOptions struct {
	// placeholder for future optional parameters
}

// LroRetrysBeginPost202Retry200Options contains the optional parameters for the LroRetrys.BeginPost202Retry200 method.
type LroRetrysBeginPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LroRetrysBeginPostAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.BeginPostAsyncRelativeRetrySucceeded method.
type LroRetrysBeginPostAsyncRelativeRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LroRetrysBeginPut201CreatingSucceeded200Options contains the optional parameters for the LroRetrys.BeginPut201CreatingSucceeded200 method.
type LroRetrysBeginPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LroRetrysBeginPutAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.BeginPutAsyncRelativeRetrySucceeded method.
type LroRetrysBeginPutAsyncRelativeRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginDelete202NonRetry400Options contains the optional parameters for the LrosaDs.BeginDelete202NonRetry400 method.
type LrosaDsBeginDelete202NonRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDelete202RetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.BeginDelete202RetryInvalidHeader method.
type LrosaDsBeginDelete202RetryInvalidHeaderOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDelete204SucceededOptions contains the optional parameters for the LrosaDs.BeginDelete204Succeeded method.
type LrosaDsBeginDelete204SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDeleteAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.BeginDeleteAsyncRelativeRetry400 method.
type LrosaDsBeginDeleteAsyncRelativeRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDeleteAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.BeginDeleteAsyncRelativeRetryInvalidHeader
// method.
type LrosaDsBeginDeleteAsyncRelativeRetryInvalidHeaderOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDeleteAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.BeginDeleteAsyncRelativeRetryInvalidJSONPolling
// method.
type LrosaDsBeginDeleteAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDeleteAsyncRelativeRetryNoStatusOptions contains the optional parameters for the LrosaDs.BeginDeleteAsyncRelativeRetryNoStatus method.
type LrosaDsBeginDeleteAsyncRelativeRetryNoStatusOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginDeleteNonRetry400Options contains the optional parameters for the LrosaDs.BeginDeleteNonRetry400 method.
type LrosaDsBeginDeleteNonRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsBeginPost202NoLocationOptions contains the optional parameters for the LrosaDs.BeginPost202NoLocation method.
type LrosaDsBeginPost202NoLocationOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPost202NonRetry400Options contains the optional parameters for the LrosaDs.BeginPost202NonRetry400 method.
type LrosaDsBeginPost202NonRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPost202RetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.BeginPost202RetryInvalidHeader method.
type LrosaDsBeginPost202RetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPostAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.BeginPostAsyncRelativeRetry400 method.
type LrosaDsBeginPostAsyncRelativeRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPostAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.BeginPostAsyncRelativeRetryInvalidHeader method.
type LrosaDsBeginPostAsyncRelativeRetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPostAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.BeginPostAsyncRelativeRetryInvalidJSONPolling
// method.
type LrosaDsBeginPostAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPostAsyncRelativeRetryNoPayloadOptions contains the optional parameters for the LrosaDs.BeginPostAsyncRelativeRetryNoPayload method.
type LrosaDsBeginPostAsyncRelativeRetryNoPayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPostNonRetry400Options contains the optional parameters for the LrosaDs.BeginPostNonRetry400 method.
type LrosaDsBeginPostNonRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPut200InvalidJSONOptions contains the optional parameters for the LrosaDs.BeginPut200InvalidJSON method.
type LrosaDsBeginPut200InvalidJSONOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.BeginPutAsyncRelativeRetry400 method.
type LrosaDsBeginPutAsyncRelativeRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.BeginPutAsyncRelativeRetryInvalidHeader method.
type LrosaDsBeginPutAsyncRelativeRetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.BeginPutAsyncRelativeRetryInvalidJSONPolling
// method.
type LrosaDsBeginPutAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutAsyncRelativeRetryNoStatusOptions contains the optional parameters for the LrosaDs.BeginPutAsyncRelativeRetryNoStatus method.
type LrosaDsBeginPutAsyncRelativeRetryNoStatusOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutAsyncRelativeRetryNoStatusPayloadOptions contains the optional parameters for the LrosaDs.BeginPutAsyncRelativeRetryNoStatusPayload method.
type LrosaDsBeginPutAsyncRelativeRetryNoStatusPayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutError201NoProvisioningStatePayloadOptions contains the optional parameters for the LrosaDs.BeginPutError201NoProvisioningStatePayload
// method.
type LrosaDsBeginPutError201NoProvisioningStatePayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutNonRetry201Creating400InvalidJSONOptions contains the optional parameters for the LrosaDs.BeginPutNonRetry201Creating400InvalidJSON method.
type LrosaDsBeginPutNonRetry201Creating400InvalidJSONOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutNonRetry201Creating400Options contains the optional parameters for the LrosaDs.BeginPutNonRetry201Creating400 method.
type LrosaDsBeginPutNonRetry201Creating400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsBeginPutNonRetry400Options contains the optional parameters for the LrosaDs.BeginPutNonRetry400 method.
type LrosaDsBeginPutNonRetry400Options struct {
	// Product to put
	Product *Product
}

type OperationResult struct {
	Error *OperationResultError `json:"error,omitempty"`

	// The status of the request
	Status *OperationResultStatus `json:"status,omitempty"`
}

type OperationResultError struct {
	// The error code for an operation failure
	Code *int32 `json:"code,omitempty"`

	// The detailed arror message
	Message *string `json:"message,omitempty"`
}

type Product struct {
	Resource
	Properties *ProductProperties `json:"properties,omitempty"`
}

// ProductArrayPollerResponse is the response envelope for operations that asynchronously return a []Product type.
type ProductArrayPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ProductArrayResponse, error)

	// Poller contains an initialized poller.
	Poller ProductArrayPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductArrayResponse is the response envelope for operations that return a []Product type.
type ProductArrayResponse struct {
	// Array of Product
	ProductArray []Product

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPollerResponse is the response envelope for operations that asynchronously return a Product type.
type ProductPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (ProductResponse, error)

	// Poller contains an initialized poller.
	Poller ProductPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type ProductProperties struct {
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ProvisioningStateValues - READ-ONLY
	ProvisioningStateValues *ProductPropertiesProvisioningStateValues `json:"provisioningStateValues,omitempty" azure:"ro"`
}

// ProductResponse is the response envelope for operations that return a Product type.
type ProductResponse struct {
	Product *Product

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Resource struct {
	// READ-ONLY; Resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// Resource Location
	Location *string `json:"location,omitempty"`

	// READ-ONLY; Resource Name
	Name *string `json:"name,omitempty" azure:"ro"`

	// Dictionary of
	Tags *map[string]string `json:"tags,omitempty"`

	// READ-ONLY; Resource Type
	Type *string `json:"type,omitempty" azure:"ro"`
}

type SKU struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SKUPollerResponse is the response envelope for operations that asynchronously return a SKU type.
type SKUPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SKUResponse, error)

	// Poller contains an initialized poller.
	Poller SKUPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SKUResponse is the response envelope for operations that return a SKU type.
type SKUResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	SKU         *SKU
}

type SubProduct struct {
	SubResource
	Properties *SubProductProperties `json:"properties,omitempty"`
}

// SubProductPollerResponse is the response envelope for operations that asynchronously return a SubProduct type.
type SubProductPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (SubProductResponse, error)

	// Poller contains an initialized poller.
	Poller SubProductPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type SubProductProperties struct {
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ProvisioningStateValues - READ-ONLY
	ProvisioningStateValues *SubProductPropertiesProvisioningStateValues `json:"provisioningStateValues,omitempty" azure:"ro"`
}

// SubProductResponse is the response envelope for operations that return a SubProduct type.
type SubProductResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	SubProduct  *SubProduct
}

type SubResource struct {
	// READ-ONLY; Sub Resource Id
	ID *string `json:"id,omitempty" azure:"ro"`
}
