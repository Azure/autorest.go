// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package lrogroup

import (
	"context"
	"fmt"
	"net/http"
	"time"
)

type CloudError struct {
	Code    *int32  `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// Error implements the error interface for type CloudError.
func (e CloudError) Error() string {
	msg := ""
	if e.Code != nil {
		msg += fmt.Sprintf("Code: %v\n", *e.Code)
	}
	if e.Message != nil {
		msg += fmt.Sprintf("Message: %v\n", *e.Message)
	}
	if msg == "" {
		msg = "missing error info"
	}
	return msg
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// LrOSCustomHeaderPost202Retry200Options contains the optional parameters for the LrOSCustomHeader.Post202Retry200 method.
type LrOSCustomHeaderPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderPostAsyncRetrySucceededOptions contains the optional parameters for the LrOSCustomHeader.PostAsyncRetrySucceeded method.
type LrOSCustomHeaderPostAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderPut201CreatingSucceeded200Options contains the optional parameters for the LrOSCustomHeader.Put201CreatingSucceeded200 method.
type LrOSCustomHeaderPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LrOSCustomHeaderPutAsyncRetrySucceededOptions contains the optional parameters for the LrOSCustomHeader.PutAsyncRetrySucceeded method.
type LrOSCustomHeaderPutAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSDelete202NoRetry204Options contains the optional parameters for the LrOS.Delete202NoRetry204 method.
type LrOSDelete202NoRetry204Options struct {
	// placeholder for future optional parameters
}

// LrOSDelete202Retry200Options contains the optional parameters for the LrOS.Delete202Retry200 method.
type LrOSDelete202Retry200Options struct {
	// placeholder for future optional parameters
}

// LrOSDelete204SucceededOptions contains the optional parameters for the LrOS.Delete204Succeeded method.
type LrOSDelete204SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteAsyncNoHeaderInRetryOptions contains the optional parameters for the LrOS.DeleteAsyncNoHeaderInRetry method.
type LrOSDeleteAsyncNoHeaderInRetryOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.DeleteAsyncNoRetrySucceeded method.
type LrOSDeleteAsyncNoRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteAsyncRetryFailedOptions contains the optional parameters for the LrOS.DeleteAsyncRetryFailed method.
type LrOSDeleteAsyncRetryFailedOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteAsyncRetrySucceededOptions contains the optional parameters for the LrOS.DeleteAsyncRetrySucceeded method.
type LrOSDeleteAsyncRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteAsyncRetrycanceledOptions contains the optional parameters for the LrOS.DeleteAsyncRetrycanceled method.
type LrOSDeleteAsyncRetrycanceledOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteNoHeaderInRetryOptions contains the optional parameters for the LrOS.DeleteNoHeaderInRetry method.
type LrOSDeleteNoHeaderInRetryOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteProvisioning202Accepted200SucceededOptions contains the optional parameters for the LrOS.DeleteProvisioning202Accepted200Succeeded method.
type LrOSDeleteProvisioning202Accepted200SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrOSDeleteProvisioning202DeletingFailed200Options contains the optional parameters for the LrOS.DeleteProvisioning202DeletingFailed200 method.
type LrOSDeleteProvisioning202DeletingFailed200Options struct {
	// placeholder for future optional parameters
}

// LrOSDeleteProvisioning202Deletingcanceled200Options contains the optional parameters for the LrOS.DeleteProvisioning202Deletingcanceled200 method.
type LrOSDeleteProvisioning202Deletingcanceled200Options struct {
	// placeholder for future optional parameters
}

// LrOSPost200WithPayloadOptions contains the optional parameters for the LrOS.Post200WithPayload method.
type LrOSPost200WithPayloadOptions struct {
	// placeholder for future optional parameters
}

// LrOSPost202ListOptions contains the optional parameters for the LrOS.Post202List method.
type LrOSPost202ListOptions struct {
	// placeholder for future optional parameters
}

// LrOSPost202NoRetry204Options contains the optional parameters for the LrOS.Post202NoRetry204 method.
type LrOSPost202NoRetry204Options struct {
	// Product to put
	Product *Product
}

// LrOSPost202Retry200Options contains the optional parameters for the LrOS.Post202Retry200 method.
type LrOSPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSPostAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.PostAsyncNoRetrySucceeded method.
type LrOSPostAsyncNoRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPostAsyncRetryFailedOptions contains the optional parameters for the LrOS.PostAsyncRetryFailed method.
type LrOSPostAsyncRetryFailedOptions struct {
	// Product to put
	Product *Product
}

// LrOSPostAsyncRetrySucceededOptions contains the optional parameters for the LrOS.PostAsyncRetrySucceeded method.
type LrOSPostAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPostAsyncRetrycanceledOptions contains the optional parameters for the LrOS.PostAsyncRetrycanceled method.
type LrOSPostAsyncRetrycanceledOptions struct {
	// Product to put
	Product *Product
}

// LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultOptions contains the optional parameters for the LrOS.PostDoubleHeadersFinalAzureHeaderGetDefault method.
type LrOSPostDoubleHeadersFinalAzureHeaderGetDefaultOptions struct {
	// placeholder for future optional parameters
}

// LrOSPostDoubleHeadersFinalAzureHeaderGetOptions contains the optional parameters for the LrOS.PostDoubleHeadersFinalAzureHeaderGet method.
type LrOSPostDoubleHeadersFinalAzureHeaderGetOptions struct {
	// placeholder for future optional parameters
}

// LrOSPostDoubleHeadersFinalLocationGetOptions contains the optional parameters for the LrOS.PostDoubleHeadersFinalLocationGet method.
type LrOSPostDoubleHeadersFinalLocationGetOptions struct {
	// placeholder for future optional parameters
}

// LrOSPut200Acceptedcanceled200Options contains the optional parameters for the LrOS.Put200Acceptedcanceled200 method.
type LrOSPut200Acceptedcanceled200Options struct {
	// Product to put
	Product *Product
}

// LrOSPut200SucceededNoStateOptions contains the optional parameters for the LrOS.Put200SucceededNoState method.
type LrOSPut200SucceededNoStateOptions struct {
	// Product to put
	Product *Product
}

// LrOSPut200SucceededOptions contains the optional parameters for the LrOS.Put200Succeeded method.
type LrOSPut200SucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPut200UpdatingSucceeded204Options contains the optional parameters for the LrOS.Put200UpdatingSucceeded204 method.
type LrOSPut200UpdatingSucceeded204Options struct {
	// Product to put
	Product *Product
}

// LrOSPut201CreatingFailed200Options contains the optional parameters for the LrOS.Put201CreatingFailed200 method.
type LrOSPut201CreatingFailed200Options struct {
	// Product to put
	Product *Product
}

// LrOSPut201CreatingSucceeded200Options contains the optional parameters for the LrOS.Put201CreatingSucceeded200 method.
type LrOSPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LrOSPut201SucceededOptions contains the optional parameters for the LrOS.Put201Succeeded method.
type LrOSPut201SucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPut202Retry200Options contains the optional parameters for the LrOS.Put202Retry200 method.
type LrOSPut202Retry200Options struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncNoHeaderInRetryOptions contains the optional parameters for the LrOS.PutAsyncNoHeaderInRetry method.
type LrOSPutAsyncNoHeaderInRetryOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncNoRetrySucceededOptions contains the optional parameters for the LrOS.PutAsyncNoRetrySucceeded method.
type LrOSPutAsyncNoRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncNoRetrycanceledOptions contains the optional parameters for the LrOS.PutAsyncNoRetrycanceled method.
type LrOSPutAsyncNoRetrycanceledOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncNonResourceOptions contains the optional parameters for the LrOS.PutAsyncNonResource method.
type LrOSPutAsyncNonResourceOptions struct {
	// Sku to put
	Sku *SKU
}

// LrOSPutAsyncRetryFailedOptions contains the optional parameters for the LrOS.PutAsyncRetryFailed method.
type LrOSPutAsyncRetryFailedOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncRetrySucceededOptions contains the optional parameters for the LrOS.PutAsyncRetrySucceeded method.
type LrOSPutAsyncRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutAsyncSubResourceOptions contains the optional parameters for the LrOS.PutAsyncSubResource method.
type LrOSPutAsyncSubResourceOptions struct {
	// Sub Product to put
	Product *SubProduct
}

// LrOSPutNoHeaderInRetryOptions contains the optional parameters for the LrOS.PutNoHeaderInRetry method.
type LrOSPutNoHeaderInRetryOptions struct {
	// Product to put
	Product *Product
}

// LrOSPutNonResourceOptions contains the optional parameters for the LrOS.PutNonResource method.
type LrOSPutNonResourceOptions struct {
	// sku to put
	Sku *SKU
}

// LrOSPutSubResourceOptions contains the optional parameters for the LrOS.PutSubResource method.
type LrOSPutSubResourceOptions struct {
	// Sub Product to put
	Product *SubProduct
}

// LroRetrysDelete202Retry200Options contains the optional parameters for the LroRetrys.Delete202Retry200 method.
type LroRetrysDelete202Retry200Options struct {
	// placeholder for future optional parameters
}

// LroRetrysDeleteAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.DeleteAsyncRelativeRetrySucceeded method.
type LroRetrysDeleteAsyncRelativeRetrySucceededOptions struct {
	// placeholder for future optional parameters
}

// LroRetrysDeleteProvisioning202Accepted200SucceededOptions contains the optional parameters for the LroRetrys.DeleteProvisioning202Accepted200Succeeded
// method.
type LroRetrysDeleteProvisioning202Accepted200SucceededOptions struct {
	// placeholder for future optional parameters
}

// LroRetrysPost202Retry200Options contains the optional parameters for the LroRetrys.Post202Retry200 method.
type LroRetrysPost202Retry200Options struct {
	// Product to put
	Product *Product
}

// LroRetrysPostAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.PostAsyncRelativeRetrySucceeded method.
type LroRetrysPostAsyncRelativeRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LroRetrysPut201CreatingSucceeded200Options contains the optional parameters for the LroRetrys.Put201CreatingSucceeded200 method.
type LroRetrysPut201CreatingSucceeded200Options struct {
	// Product to put
	Product *Product
}

// LroRetrysPutAsyncRelativeRetrySucceededOptions contains the optional parameters for the LroRetrys.PutAsyncRelativeRetrySucceeded method.
type LroRetrysPutAsyncRelativeRetrySucceededOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsDelete202NonRetry400Options contains the optional parameters for the LrosaDs.Delete202NonRetry400 method.
type LrosaDsDelete202NonRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsDelete202RetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.Delete202RetryInvalidHeader method.
type LrosaDsDelete202RetryInvalidHeaderOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsDelete204SucceededOptions contains the optional parameters for the LrosaDs.Delete204Succeeded method.
type LrosaDsDelete204SucceededOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsDeleteAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.DeleteAsyncRelativeRetry400 method.
type LrosaDsDeleteAsyncRelativeRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsDeleteAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.DeleteAsyncRelativeRetryInvalidHeader method.
type LrosaDsDeleteAsyncRelativeRetryInvalidHeaderOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsDeleteAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.DeleteAsyncRelativeRetryInvalidJSONPolling
// method.
type LrosaDsDeleteAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsDeleteAsyncRelativeRetryNoStatusOptions contains the optional parameters for the LrosaDs.DeleteAsyncRelativeRetryNoStatus method.
type LrosaDsDeleteAsyncRelativeRetryNoStatusOptions struct {
	// placeholder for future optional parameters
}

// LrosaDsDeleteNonRetry400Options contains the optional parameters for the LrosaDs.DeleteNonRetry400 method.
type LrosaDsDeleteNonRetry400Options struct {
	// placeholder for future optional parameters
}

// LrosaDsPost202NoLocationOptions contains the optional parameters for the LrosaDs.Post202NoLocation method.
type LrosaDsPost202NoLocationOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPost202NonRetry400Options contains the optional parameters for the LrosaDs.Post202NonRetry400 method.
type LrosaDsPost202NonRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsPost202RetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.Post202RetryInvalidHeader method.
type LrosaDsPost202RetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPostAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.PostAsyncRelativeRetry400 method.
type LrosaDsPostAsyncRelativeRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsPostAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.PostAsyncRelativeRetryInvalidHeader method.
type LrosaDsPostAsyncRelativeRetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPostAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.PostAsyncRelativeRetryInvalidJSONPolling method.
type LrosaDsPostAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPostAsyncRelativeRetryNoPayloadOptions contains the optional parameters for the LrosaDs.PostAsyncRelativeRetryNoPayload method.
type LrosaDsPostAsyncRelativeRetryNoPayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPostNonRetry400Options contains the optional parameters for the LrosaDs.PostNonRetry400 method.
type LrosaDsPostNonRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsPut200InvalidJSONOptions contains the optional parameters for the LrosaDs.Put200InvalidJSON method.
type LrosaDsPut200InvalidJSONOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutAsyncRelativeRetry400Options contains the optional parameters for the LrosaDs.PutAsyncRelativeRetry400 method.
type LrosaDsPutAsyncRelativeRetry400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsPutAsyncRelativeRetryInvalidHeaderOptions contains the optional parameters for the LrosaDs.PutAsyncRelativeRetryInvalidHeader method.
type LrosaDsPutAsyncRelativeRetryInvalidHeaderOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutAsyncRelativeRetryInvalidJSONPollingOptions contains the optional parameters for the LrosaDs.PutAsyncRelativeRetryInvalidJSONPolling method.
type LrosaDsPutAsyncRelativeRetryInvalidJSONPollingOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutAsyncRelativeRetryNoStatusOptions contains the optional parameters for the LrosaDs.PutAsyncRelativeRetryNoStatus method.
type LrosaDsPutAsyncRelativeRetryNoStatusOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutAsyncRelativeRetryNoStatusPayloadOptions contains the optional parameters for the LrosaDs.PutAsyncRelativeRetryNoStatusPayload method.
type LrosaDsPutAsyncRelativeRetryNoStatusPayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutError201NoProvisioningStatePayloadOptions contains the optional parameters for the LrosaDs.PutError201NoProvisioningStatePayload method.
type LrosaDsPutError201NoProvisioningStatePayloadOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutNonRetry201Creating400InvalidJSONOptions contains the optional parameters for the LrosaDs.PutNonRetry201Creating400InvalidJSON method.
type LrosaDsPutNonRetry201Creating400InvalidJSONOptions struct {
	// Product to put
	Product *Product
}

// LrosaDsPutNonRetry201Creating400Options contains the optional parameters for the LrosaDs.PutNonRetry201Creating400 method.
type LrosaDsPutNonRetry201Creating400Options struct {
	// Product to put
	Product *Product
}

// LrosaDsPutNonRetry400Options contains the optional parameters for the LrosaDs.PutNonRetry400 method.
type LrosaDsPutNonRetry400Options struct {
	// Product to put
	Product *Product
}

type OperationResult struct {
	Error *OperationResultError `json:"error,omitempty"`

	// The status of the request
	Status *OperationResultStatus `json:"status,omitempty"`
}

type OperationResultError struct {
	// The error code for an operation failure
	Code *int32 `json:"code,omitempty"`

	// The detailed arror message
	Message *string `json:"message,omitempty"`
}

type Product struct {
	Resource
	Properties *ProductProperties `json:"properties,omitempty"`
}

// ProductArrayPollerResponse is the response envelope for operations that asynchronously return a []Product type.
type ProductArrayPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*ProductArrayResponse, error)

	// Poller contains an initialized poller.
	Poller ProductArrayPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductArrayResponse is the response envelope for operations that return a []Product type.
type ProductArrayResponse struct {
	// Array of Product
	ProductArray *[]Product

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ProductPollerResponse is the response envelope for operations that asynchronously return a Product type.
type ProductPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*ProductResponse, error)

	// Poller contains an initialized poller.
	Poller ProductPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type ProductProperties struct {
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ProvisioningStateValues - READ-ONLY
	ProvisioningStateValues *ProductPropertiesProvisioningStateValues `json:"provisioningStateValues,omitempty" azure:"ro"`
}

// ProductResponse is the response envelope for operations that return a Product type.
type ProductResponse struct {
	Product *Product

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type Resource struct {
	// READ-ONLY; Resource Id
	ID *string `json:"id,omitempty" azure:"ro"`

	// Resource Location
	Location *string `json:"location,omitempty"`

	// READ-ONLY; Resource Name
	Name *string `json:"name,omitempty" azure:"ro"`

	// Dictionary of
	Tags *map[string]string `json:"tags,omitempty"`

	// READ-ONLY; Resource Type
	Type *string `json:"type,omitempty" azure:"ro"`
}

type SKU struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SKUPollerResponse is the response envelope for operations that asynchronously return a SKU type.
type SKUPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*SKUResponse, error)

	// Poller contains an initialized poller.
	Poller SKUPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// SKUResponse is the response envelope for operations that return a SKU type.
type SKUResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	SKU         *SKU
}

type SubProduct struct {
	SubResource
	Properties *SubProductProperties `json:"properties,omitempty"`
}

// SubProductPollerResponse is the response envelope for operations that asynchronously return a SubProduct type.
type SubProductPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*SubProductResponse, error)

	// Poller contains an initialized poller.
	Poller SubProductPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

type SubProductProperties struct {
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// ProvisioningStateValues - READ-ONLY
	ProvisioningStateValues *SubProductPropertiesProvisioningStateValues `json:"provisioningStateValues,omitempty" azure:"ro"`
}

// SubProductResponse is the response envelope for operations that return a SubProduct type.
type SubProductResponse struct {
	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
	SubProduct  *SubProduct
}

type SubResource struct {
	// READ-ONLY; Sub Resource Id
	ID *string `json:"id,omitempty" azure:"ro"`
}
