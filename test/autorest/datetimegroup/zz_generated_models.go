//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package datetimegroup

// DatetimeGetInvalidOptions contains the optional parameters for the DatetimeClient.GetInvalid method.
type DatetimeGetInvalidOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalNegativeOffsetLowercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalNegativeOffsetLowercaseMaxDateTime
// method.
type DatetimeGetLocalNegativeOffsetLowercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalNegativeOffsetMinDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalNegativeOffsetMinDateTime
// method.
type DatetimeGetLocalNegativeOffsetMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalNegativeOffsetUppercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalNegativeOffsetUppercaseMaxDateTime
// method.
type DatetimeGetLocalNegativeOffsetUppercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalNoOffsetMinDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalNoOffsetMinDateTime
// method.
type DatetimeGetLocalNoOffsetMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalPositiveOffsetLowercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalPositiveOffsetLowercaseMaxDateTime
// method.
type DatetimeGetLocalPositiveOffsetLowercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalPositiveOffsetMinDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalPositiveOffsetMinDateTime
// method.
type DatetimeGetLocalPositiveOffsetMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetLocalPositiveOffsetUppercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetLocalPositiveOffsetUppercaseMaxDateTime
// method.
type DatetimeGetLocalPositiveOffsetUppercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetNullOptions contains the optional parameters for the DatetimeClient.GetNull method.
type DatetimeGetNullOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetOverflowOptions contains the optional parameters for the DatetimeClient.GetOverflow method.
type DatetimeGetOverflowOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetUTCLowercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetUTCLowercaseMaxDateTime
// method.
type DatetimeGetUTCLowercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetUTCMinDateTimeOptions contains the optional parameters for the DatetimeClient.GetUTCMinDateTime method.
type DatetimeGetUTCMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetUTCUppercaseMaxDateTime7DigitsOptions contains the optional parameters for the DatetimeClient.GetUTCUppercaseMaxDateTime7Digits
// method.
type DatetimeGetUTCUppercaseMaxDateTime7DigitsOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetUTCUppercaseMaxDateTimeOptions contains the optional parameters for the DatetimeClient.GetUTCUppercaseMaxDateTime
// method.
type DatetimeGetUTCUppercaseMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimeGetUnderflowOptions contains the optional parameters for the DatetimeClient.GetUnderflow method.
type DatetimeGetUnderflowOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutLocalNegativeOffsetMaxDateTimeOptions contains the optional parameters for the DatetimeClient.PutLocalNegativeOffsetMaxDateTime
// method.
type DatetimePutLocalNegativeOffsetMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutLocalNegativeOffsetMinDateTimeOptions contains the optional parameters for the DatetimeClient.PutLocalNegativeOffsetMinDateTime
// method.
type DatetimePutLocalNegativeOffsetMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutLocalPositiveOffsetMaxDateTimeOptions contains the optional parameters for the DatetimeClient.PutLocalPositiveOffsetMaxDateTime
// method.
type DatetimePutLocalPositiveOffsetMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutLocalPositiveOffsetMinDateTimeOptions contains the optional parameters for the DatetimeClient.PutLocalPositiveOffsetMinDateTime
// method.
type DatetimePutLocalPositiveOffsetMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutUTCMaxDateTime7DigitsOptions contains the optional parameters for the DatetimeClient.PutUTCMaxDateTime7Digits
// method.
type DatetimePutUTCMaxDateTime7DigitsOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutUTCMaxDateTimeOptions contains the optional parameters for the DatetimeClient.PutUTCMaxDateTime method.
type DatetimePutUTCMaxDateTimeOptions struct {
	// placeholder for future optional parameters
}

// DatetimePutUTCMinDateTimeOptions contains the optional parameters for the DatetimeClient.PutUTCMinDateTime method.
type DatetimePutUTCMinDateTimeOptions struct {
	// placeholder for future optional parameters
}

// Implements the error and azcore.HTTPResponse interfaces.
type Error struct {
	raw     string
	Message *string `json:"message,omitempty"`
	Status  *int32  `json:"status,omitempty"`
}

// Error implements the error interface for type Error.
// The contents of the error text are not contractual and subject to change.
func (e Error) Error() string {
	return e.raw
}
