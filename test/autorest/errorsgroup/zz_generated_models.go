//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package errorsgroup

type Animal struct {
	AniType *string `json:"aniType,omitempty"`
}

type Pet struct {
	AniType *string `json:"aniType,omitempty"`

	// READ-ONLY; Gets the Pet by id.
	Name *string `json:"name,omitempty" azure:"ro"`
}

type PetAction struct {
	// action feedback
	ActionResponse *string `json:"actionResponse,omitempty"`
}

// PetActionErrorClassification provides polymorphic access to related types.
// Call the interface's GetPetActionError() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *PetActionError, *PetHungryOrThirstyError, *PetSadError
type PetActionErrorClassification interface {
	// GetPetActionError returns the PetActionError content of the underlying type.
	GetPetActionError() *PetActionError
}

type PetActionError struct {
	// REQUIRED
	ErrorType *string `json:"errorType,omitempty"`

	// action feedback
	ActionResponse *string `json:"actionResponse,omitempty"`

	// the error message
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// PetClientDoSomethingOptions contains the optional parameters for the PetClient.DoSomething method.
type PetClientDoSomethingOptions struct {
	// placeholder for future optional parameters
}

// PetClientGetPetByIDOptions contains the optional parameters for the PetClient.GetPetByID method.
type PetClientGetPetByIDOptions struct {
	// placeholder for future optional parameters
}

// PetClientHasModelsParamOptions contains the optional parameters for the PetClient.HasModelsParam method.
type PetClientHasModelsParamOptions struct {
	// Make sure model deserialization doesn't conflict with this param name, which has input name 'models'. Use client default
	// value in call
	Models *string
}

type PetHungryOrThirstyError struct {
	// REQUIRED
	ErrorType *string `json:"errorType,omitempty"`

	// action feedback
	ActionResponse *string `json:"actionResponse,omitempty"`

	// the error message
	ErrorMessage *string `json:"errorMessage,omitempty"`

	// is the pet hungry or thirsty or both
	HungryOrThirsty *string `json:"hungryOrThirsty,omitempty"`

	// why is the pet sad
	Reason *string `json:"reason,omitempty"`
}

// PetSadErrorClassification provides polymorphic access to related types.
// Call the interface's GetPetSadError() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *PetHungryOrThirstyError, *PetSadError
type PetSadErrorClassification interface {
	PetActionErrorClassification
	// GetPetSadError returns the PetSadError content of the underlying type.
	GetPetSadError() *PetSadError
}

type PetSadError struct {
	// REQUIRED
	ErrorType *string `json:"errorType,omitempty"`

	// action feedback
	ActionResponse *string `json:"actionResponse,omitempty"`

	// the error message
	ErrorMessage *string `json:"errorMessage,omitempty"`

	// why is the pet sad
	Reason *string `json:"reason,omitempty"`
}
