//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package headergroup

import "time"

// Implements the error and azcore.HTTPResponse interfaces.
type Error struct {
	raw     string
	Message *string `json:"message,omitempty"`
	Status  *int32  `json:"status,omitempty"`
}

// Error implements the error interface for type Error.
// The contents of the error text are not contractual and subject to change.
func (e Error) Error() string {
	return e.raw
}

// HeaderCustomRequestIDOptions contains the optional parameters for the Header.CustomRequestID method.
type HeaderCustomRequestIDOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamBoolOptions contains the optional parameters for the Header.ParamBool method.
type HeaderParamBoolOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamByteOptions contains the optional parameters for the Header.ParamByte method.
type HeaderParamByteOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamDateOptions contains the optional parameters for the Header.ParamDate method.
type HeaderParamDateOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamDatetimeOptions contains the optional parameters for the Header.ParamDatetime method.
type HeaderParamDatetimeOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamDatetimeRFC1123Options contains the optional parameters for the Header.ParamDatetimeRFC1123 method.
type HeaderParamDatetimeRFC1123Options struct {
	// Send a post request with header values "Wed, 01 Jan 2010 12:34:56 GMT" or "Mon, 01 Jan 0001 00:00:00 GMT"
	Value *time.Time
}

// HeaderParamDoubleOptions contains the optional parameters for the Header.ParamDouble method.
type HeaderParamDoubleOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamDurationOptions contains the optional parameters for the Header.ParamDuration method.
type HeaderParamDurationOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamEnumOptions contains the optional parameters for the Header.ParamEnum method.
type HeaderParamEnumOptions struct {
	// Send a post request with header values 'GREY'
	Value *GreyscaleColors
}

// HeaderParamExistingKeyOptions contains the optional parameters for the Header.ParamExistingKey method.
type HeaderParamExistingKeyOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamFloatOptions contains the optional parameters for the Header.ParamFloat method.
type HeaderParamFloatOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamIntegerOptions contains the optional parameters for the Header.ParamInteger method.
type HeaderParamIntegerOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamLongOptions contains the optional parameters for the Header.ParamLong method.
type HeaderParamLongOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamProtectedKeyOptions contains the optional parameters for the Header.ParamProtectedKey method.
type HeaderParamProtectedKeyOptions struct {
	// placeholder for future optional parameters
}

// HeaderParamStringOptions contains the optional parameters for the Header.ParamString method.
type HeaderParamStringOptions struct {
	// Send a post request with header values "The quick brown fox jumps over the lazy dog" or null or ""
	Value *string
}

// HeaderResponseBoolOptions contains the optional parameters for the Header.ResponseBool method.
type HeaderResponseBoolOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseByteOptions contains the optional parameters for the Header.ResponseByte method.
type HeaderResponseByteOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseDateOptions contains the optional parameters for the Header.ResponseDate method.
type HeaderResponseDateOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseDatetimeOptions contains the optional parameters for the Header.ResponseDatetime method.
type HeaderResponseDatetimeOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseDatetimeRFC1123Options contains the optional parameters for the Header.ResponseDatetimeRFC1123 method.
type HeaderResponseDatetimeRFC1123Options struct {
	// placeholder for future optional parameters
}

// HeaderResponseDoubleOptions contains the optional parameters for the Header.ResponseDouble method.
type HeaderResponseDoubleOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseDurationOptions contains the optional parameters for the Header.ResponseDuration method.
type HeaderResponseDurationOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseEnumOptions contains the optional parameters for the Header.ResponseEnum method.
type HeaderResponseEnumOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseExistingKeyOptions contains the optional parameters for the Header.ResponseExistingKey method.
type HeaderResponseExistingKeyOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseFloatOptions contains the optional parameters for the Header.ResponseFloat method.
type HeaderResponseFloatOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseIntegerOptions contains the optional parameters for the Header.ResponseInteger method.
type HeaderResponseIntegerOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseLongOptions contains the optional parameters for the Header.ResponseLong method.
type HeaderResponseLongOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseProtectedKeyOptions contains the optional parameters for the Header.ResponseProtectedKey method.
type HeaderResponseProtectedKeyOptions struct {
	// placeholder for future optional parameters
}

// HeaderResponseStringOptions contains the optional parameters for the Header.ResponseString method.
type HeaderResponseStringOptions struct {
	// placeholder for future optional parameters
}
