package validationgroup

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
)

// EnumConst enumerates the values for enum const.
type EnumConst string

const (
	// ConstantStringAsEnum ...
	ConstantStringAsEnum EnumConst = "constant_string_as_enum"
)

// PossibleEnumConstValues returns an array of possible values for the EnumConst const type.
func PossibleEnumConstValues() []EnumConst {
	return []EnumConst{ConstantStringAsEnum}
}

// ChildProduct the product documentation.
type ChildProduct struct {
	// ConstProperty - Constant string
	ConstProperty *string `json:"constProperty,omitempty"`
	// Count - Count
	Count *int32 `json:"count,omitempty"`
}

// ConstantProduct the product documentation.
type ConstantProduct struct {
	// ConstProperty - Constant string
	ConstProperty *string `json:"constProperty,omitempty"`
	// ConstProperty2 - Constant string2
	ConstProperty2 *string `json:"constProperty2,omitempty"`
}

// Error ...
type Error struct {
	Code    *int32  `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Fields  *string `json:"fields,omitempty"`
}

// Product the product documentation.
type Product struct {
	autorest.Response `json:"-"`
	// DisplayNames - Non required array of unique items from 0 to 6 elements.
	DisplayNames *[]string `json:"display_names,omitempty"`
	// Capacity - Non required int betwen 0 and 100 exclusive.
	Capacity *int32 `json:"capacity,omitempty"`
	// Image - Image URL representing the product.
	Image      *string          `json:"image,omitempty"`
	Child      *ChildProduct    `json:"child,omitempty"`
	ConstChild *ConstantProduct `json:"constChild,omitempty"`
	// ConstInt - Constant int
	ConstInt *int32 `json:"constInt,omitempty"`
	// ConstString - Constant string
	ConstString *string `json:"constString,omitempty"`
	// ConstStringAsEnum - Constant string as Enum. Possible values include: 'ConstantStringAsEnum'
	ConstStringAsEnum EnumConst `json:"constStringAsEnum,omitempty"`
}
