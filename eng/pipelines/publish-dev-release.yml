trigger: none
pr: none

variables:
  NodeVersion: '12.x'
  goTestPath: '$(system.defaultWorkingDirectory)/test'
  GOBIN: '$(system.defaultWorkingDirectory)/bin/go'

pool:
  vmImage: 'ubuntu-18.04'

steps:
  - task: NodeTool@0
    displayName: 'Install Node $(NodeVersion)'
    inputs:
      versionSpec: '$(NodeVersion)'

  - script: |
      cd $(Build.SourcesDirectory)
      npm install -g "@microsoft/rush"
      rush update --debug
      npm install -g autorest
    displayName: 'Prepare Generator Environment'

  - script: |
      rush rebuild -v
    displayName: 'Build Generator Sources'

  - script: |
      rush regenerate
      git add -A ./test/.
      git diff --staged -w 1>&2
    displayName: 'Regenerate Autorest Tests'
    failOnStderr: true

  - task: GoTool@0
    inputs:
      version: '1.14'
    displayName: "Select Go Version"

  - script: |
      set -e
      go version
      go get github.com/jstemmer/go-junit-report
    displayName: 'Install Dependencies'
    workingDirectory: '$(goTestPath)'

  - pwsh: |
      $modDirs = (./eng/scripts/get_module_dirs.ps1 -serviceDir $(goTestPath))
      foreach ($md in $modDirs) {
        pushd $md
        Write-Host "##[command]Executing go build -v ./... in $md"
        go build -v ./...
      }
    displayName: 'Build'

  - pwsh: |
      $modDirs = (./eng/scripts/get_module_dirs.ps1 -serviceDir $(goTestPath))
      foreach ($md in $modDirs) {
        pushd $md
        Write-Host "##[command]Executing go vet ./... in $md"
        go vet ./...
      }
    displayName: 'Vet'

  - pwsh: |
      pushd ./src/node_modules/@microsoft.azure/autorest.testserver
      npm start&
      popd
      $testDirs = (./eng/scripts/get_test_dirs.ps1 -serviceDir $(goTestPath))
      foreach ($td in $testDirs) {
        pushd $td
        Write-Host "##[command]Executing go test -run "^Test" -v $td | $(GOBIN)/go-junit-report -set-exit-code > report.xml"
        go test -run "^Test" -v | $(GOBIN)/go-junit-report -set-exit-code > report.xml
        popd
      }
      pushd test
      go run ./autorest/covreport/main.go
      popd
      pushd ./src/node_modules/@microsoft.azure/autorest.testserver
      npm stop
      popd
    displayName: 'Run Acceptance Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: $(goTestPath)/**/report.xml
      failTaskOnFailedTests: true

  - pwsh: |
      $currentVersion = node -p -e "require('./src/package.json').version";
      $currentVersion="$currentVersion-$(Build.BuildNumber)";
      cd src
      npm version --no-git-tag-version $currentVersion
      npm pack;
      npx publish-release --token $(package-write-token) --repo autorest.go --owner azure --name "Autorest for Go v$currentVersion" --tag v$currentVersion --notes='Preview version of Autorest for Go track 2' --prerelease --editRelease false --assets autorest-go-$currentVersion.tgz --target_commitish $(Build.SourceBranchName);
    displayName: 'Publish Dev Release'
