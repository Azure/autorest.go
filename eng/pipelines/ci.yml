trigger:
  branches:
    include:
    - track2

pr:
  branches:
    include:
    - track2

variables:
  NodeVersion: '12.x'
  goTestPath: '$(system.defaultWorkingDirectory)/test'
  GOBIN: '$(system.defaultWorkingDirectory)/bin/go'

jobs:
  - job: 'AutoRest_Go_CI'
    displayName: 'Run AutoRest CI Checks'

    strategy:
      matrix:
        Linux_Go113:
          vm.image: 'ubuntu-18.04'
          go.version: '1.13'
          GOROOT: '/usr/local/go$(go.version)'

    pool:
      vmImage: '$(vm.image)'

    steps:
      - task: NodeTool@0
        displayName: 'Install Node $(NodeVersion)'
        inputs:
          versionSpec: '$(NodeVersion)'

      - script: |
          cd $(Build.SourcesDirectory)
          npm install -g "@microsoft/rush"
          rush update --debug
          npm install -g autorest
        displayName: 'Prepare Generator Environment'

      - script: |
          rush rebuild -v
        displayName: 'Build Generator Sources'

      - script: |
          rush regenerate
          git add -A ./test/.
          git diff --staged -w 1>&2
        displayName: 'Regenerate Autorest Tests'
        failOnStderr: true
      - script: |
          set -e
          echo '##vso[task.prependpath]$(GOROOT)/bin'
        displayName: 'Create Go Workspace'

      - script: |
          set -e
          go version
          go get github.com/jstemmer/go-junit-report
        displayName: 'Install Dependencies'
        workingDirectory: '$(goTestPath)'

      - script: go vet $(go list ./...)
        displayName: 'Vet'
        workingDirectory: '$(goTestPath)'

      - script: |
          pushd ../src/node_modules/@microsoft.azure/autorest.testserver
          npm start&
          popd
          go test -v ./... 2>&1 | $(GOBIN)/go-junit-report > report.xml
          pushd ../src/node_modules/@microsoft.azure/autorest.testserver
          npm stop
        displayName: 'Run Acceptance Tests'
        workingDirectory: '$(goTestPath)'

      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: $(goTestPath)/report.xml
          failTaskOnFailedTests: true
