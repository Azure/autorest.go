// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package clientnamespacegroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
)

// ClientNamespaceClient - Illustrates the clientNamespace cases.
// Don't use this type directly, use NewClientNamespaceClientWithNoCredential() instead.
type ClientNamespaceClient struct {
	internal *azcore.Client
	endpoint string
}

// ClientNamespaceClientOptions contains the optional values for creating a [ClientNamespaceClient].
type ClientNamespaceClientOptions struct {
	azcore.ClientOptions
}

// NewClientNamespaceClientWithNoCredential creates a new instance of ClientNamespaceClient with the specified values.
//   - endpoint - Service host
//   - options - ClientNamespaceClientOptions contains the optional values for creating a [ClientNamespaceClient]
func NewClientNamespaceClientWithNoCredential(endpoint string, options *ClientNamespaceClientOptions) (*ClientNamespaceClient, error) {
	if options == nil {
		options = &ClientNamespaceClientOptions{}
	}
	cl, err := azcore.NewClient(moduleName, moduleVersion, runtime.PipelineOptions{}, &options.ClientOptions)
	if err != nil {
		return nil, err
	}
	client := &ClientNamespaceClient{
		endpoint: endpoint,
		internal: cl,
	}
	return client, nil
}

// NewClientNamespaceFirstClient creates a new instance of [ClientNamespaceFirstClient].
func (client *ClientNamespaceClient) NewClientNamespaceFirstClient() *ClientNamespaceFirstClient {
	return &ClientNamespaceFirstClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewClientNamespaceSecondClient creates a new instance of [ClientNamespaceSecondClient].
func (client *ClientNamespaceClient) NewClientNamespaceSecondClient() *ClientNamespaceSecondClient {
	return &ClientNamespaceSecondClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}
