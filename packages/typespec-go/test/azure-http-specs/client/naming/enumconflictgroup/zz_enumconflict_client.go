// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package enumconflictgroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
)

// EnumConflictClient - Test for enum with same name in different namespace.
// Don't use this type directly, use NewEnumConflictClientWithNoCredential() instead.
type EnumConflictClient struct {
	internal *azcore.Client
	endpoint string
}

// EnumConflictClientOptions contains the optional values for creating a [EnumConflictClient].
type EnumConflictClientOptions struct {
	azcore.ClientOptions
}

// NewEnumConflictClientWithNoCredential creates a new instance of EnumConflictClient with the specified values.
//   - endpoint - Service host
//   - options - Contains optional client configuration. Pass nil to accept the default values.
func NewEnumConflictClientWithNoCredential(endpoint string, options *EnumConflictClientOptions) (*EnumConflictClient, error) {
	if options == nil {
		options = &EnumConflictClientOptions{}
	}
	cl, err := azcore.NewClient(moduleName, moduleVersion, runtime.PipelineOptions{}, &options.ClientOptions)
	if err != nil {
		return nil, err
	}
	client := &EnumConflictClient{
		endpoint: endpoint,
		internal: cl,
	}
	return client, nil
}

// NewEnumConflictFirstOperationsClient creates a new instance of [EnumConflictFirstOperationsClient].
func (client *EnumConflictClient) NewEnumConflictFirstOperationsClient() *EnumConflictFirstOperationsClient {
	return &EnumConflictFirstOperationsClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewEnumConflictSecondOperationsClient creates a new instance of [EnumConflictSecondOperationsClient].
func (client *EnumConflictClient) NewEnumConflictSecondOperationsClient() *EnumConflictSecondOperationsClient {
	return &EnumConflictSecondOperationsClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}
