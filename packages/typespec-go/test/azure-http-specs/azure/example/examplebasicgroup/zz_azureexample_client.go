// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package examplebasicgroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// AzureExampleClient contains the methods for the AzureExample group.
// Don't use this type directly, use NewAzureExampleClientWithNoCredential() instead.
type AzureExampleClient struct {
	internal *azcore.Client
	endpoint string
}

// AzureExampleClientOptions contains the optional values for creating a [AzureExampleClient].
type AzureExampleClientOptions struct {
	azcore.ClientOptions
}

// NewAzureExampleClientWithNoCredential creates a new instance of AzureExampleClient with the specified values.
//   - endpoint - Service host
//   - options - AzureExampleClientOptions contains the optional values for creating a [AzureExampleClient]
func NewAzureExampleClientWithNoCredential(endpoint string, options *AzureExampleClientOptions) (*AzureExampleClient, error) {
	if options == nil {
		options = &AzureExampleClientOptions{}
	}
	cl, err := azcore.NewClient(moduleName, moduleVersion, runtime.PipelineOptions{
		APIVersion: runtime.APIVersionOptions{
			Name:     "api-version",
			Location: runtime.APIVersionLocationQueryParam,
		},
	}, &options.ClientOptions)
	if err != nil {
		return nil, err
	}
	client := &AzureExampleClient{
		endpoint: endpoint,
		internal: cl,
	}
	return client, nil
}

// BasicAction -
// If the operation fails it returns an *azcore.ResponseError type.
//
// Generated from API version 2022-12-01-preview
//   - options - AzureExampleClientBasicActionOptions contains the optional parameters for the AzureExampleClient.BasicAction
//     method.
func (client *AzureExampleClient) BasicAction(ctx context.Context, queryParam string, headerParam string, body ActionRequest, options *AzureExampleClientBasicActionOptions) (AzureExampleClientBasicActionResponse, error) {
	var err error
	const operationName = "AzureExampleClient.BasicAction"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.basicActionCreateRequest(ctx, queryParam, headerParam, body, options)
	if err != nil {
		return AzureExampleClientBasicActionResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return AzureExampleClientBasicActionResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return AzureExampleClientBasicActionResponse{}, err
	}
	resp, err := client.basicActionHandleResponse(httpResp)
	return resp, err
}

// basicActionCreateRequest creates the BasicAction request.
func (client *AzureExampleClient) basicActionCreateRequest(ctx context.Context, queryParam string, headerParam string, body ActionRequest, _ *AzureExampleClientBasicActionOptions) (*policy.Request, error) {
	urlPath := "/azure/example/basic/basic"
	req, err := runtime.NewRequest(ctx, http.MethodPost, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	reqQP := req.Raw().URL.Query()
	reqQP.Set("api-version", "2022-12-01-preview")
	reqQP.Set("query-param", queryParam)
	req.Raw().URL.RawQuery = reqQP.Encode()
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["header-param"] = []string{headerParam}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, body); err != nil {
		return nil, err
	}
	return req, nil
}

// basicActionHandleResponse handles the BasicAction response.
func (client *AzureExampleClient) basicActionHandleResponse(resp *http.Response) (AzureExampleClientBasicActionResponse, error) {
	result := AzureExampleClientBasicActionResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result.ActionResponse); err != nil {
		return AzureExampleClientBasicActionResponse{}, err
	}
	return result, nil
}
