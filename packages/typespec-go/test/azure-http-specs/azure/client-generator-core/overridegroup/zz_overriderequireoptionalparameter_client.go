// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package overridegroup

import (
	"context"
	"errors"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
	"net/url"
	"strings"
)

// OverrideRequireOptionalParameterClient contains the methods for the OverrideRequireOptionalParameter group.
// Don't use this type directly, use [OverrideClient.NewOverrideRequireOptionalParameterClient] instead.
type OverrideRequireOptionalParameterClient struct {
	internal *azcore.Client
	endpoint string
}

// RequireOptional -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - OverrideRequireOptionalParameterClientRequireOptionalOptions contains the optional parameters for the OverrideRequireOptionalParameterClient.RequireOptional
//     method.
func (client *OverrideRequireOptionalParameterClient) RequireOptional(ctx context.Context, param1 string, param2 string, options *OverrideRequireOptionalParameterClientRequireOptionalOptions) (OverrideRequireOptionalParameterClientRequireOptionalResponse, error) {
	var err error
	const operationName = "OverrideRequireOptionalParameterClient.RequireOptional"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.requireOptionalCreateRequest(ctx, param1, param2, options)
	if err != nil {
		return OverrideRequireOptionalParameterClientRequireOptionalResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return OverrideRequireOptionalParameterClientRequireOptionalResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusNoContent) {
		err = runtime.NewResponseError(httpResp)
		return OverrideRequireOptionalParameterClientRequireOptionalResponse{}, err
	}
	return OverrideRequireOptionalParameterClientRequireOptionalResponse{}, nil
}

// requireOptionalCreateRequest creates the RequireOptional request.
func (client *OverrideRequireOptionalParameterClient) requireOptionalCreateRequest(ctx context.Context, param1 string, param2 string, _ *OverrideRequireOptionalParameterClientRequireOptionalOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/override/require-optional/{param1}/{param2}"
	if param1 == "" {
		return nil, errors.New("parameter param1 cannot be empty")
	}
	urlPath = strings.ReplaceAll(urlPath, "{param1}", url.PathEscape(param1))
	if param2 == "" {
		return nil, errors.New("parameter param2 cannot be empty")
	}
	urlPath = strings.ReplaceAll(urlPath, "{param2}", url.PathEscape(param2))
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	return req, nil
}
