// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package overridegroup

import (
	"context"
	"errors"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
	"net/url"
	"strings"
)

// OverrideRemoveOptionalParameterClient contains the methods for the OverrideRemoveOptionalParameter group.
// Don't use this type directly, use [OverrideClient.NewOverrideRemoveOptionalParameterClient] instead.
type OverrideRemoveOptionalParameterClient struct {
	internal *azcore.Client
	endpoint string
}

// RemoveOptional -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - OverrideRemoveOptionalParameterClientRemoveOptionalOptions contains the optional parameters for the OverrideRemoveOptionalParameterClient.RemoveOptional
//     method.
func (client *OverrideRemoveOptionalParameterClient) RemoveOptional(ctx context.Context, param1 string, options *OverrideRemoveOptionalParameterClientRemoveOptionalOptions) (OverrideRemoveOptionalParameterClientRemoveOptionalResponse, error) {
	var err error
	const operationName = "OverrideRemoveOptionalParameterClient.RemoveOptional"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.removeOptionalCreateRequest(ctx, param1, options)
	if err != nil {
		return OverrideRemoveOptionalParameterClientRemoveOptionalResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return OverrideRemoveOptionalParameterClientRemoveOptionalResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusNoContent) {
		err = runtime.NewResponseError(httpResp)
		return OverrideRemoveOptionalParameterClientRemoveOptionalResponse{}, err
	}
	return OverrideRemoveOptionalParameterClientRemoveOptionalResponse{}, nil
}

// removeOptionalCreateRequest creates the RemoveOptional request.
func (client *OverrideRemoveOptionalParameterClient) removeOptionalCreateRequest(ctx context.Context, param1 string, options *OverrideRemoveOptionalParameterClientRemoveOptionalOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/override/remove-optional/{param1}"
	if param1 == "" {
		return nil, errors.New("parameter param1 cannot be empty")
	}
	urlPath = strings.ReplaceAll(urlPath, "{param1}", url.PathEscape(param1))
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	reqQP := req.Raw().URL.Query()
	if options != nil && options.Param2 != nil {
		reqQP.Set("param2", *options.Param2)
	}
	req.Raw().URL.RawQuery = reqQP.Encode()
	return req, nil
}
