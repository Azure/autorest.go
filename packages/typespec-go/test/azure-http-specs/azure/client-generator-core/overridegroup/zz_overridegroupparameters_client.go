// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package overridegroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// OverrideGroupParametersClient contains the methods for the OverrideGroupParameters group.
// Don't use this type directly, use [OverrideClient.NewOverrideGroupParametersClient] instead.
type OverrideGroupParametersClient struct {
	internal *azcore.Client
	endpoint string
}

// Group -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - GroupParametersOptions contains a group of parameters for the OverrideGroupParametersClient.Group method.
//   - opts - OverrideGroupParametersClientGroupOptions contains the optional parameters for the OverrideGroupParametersClient.Group
//     method.
func (client *OverrideGroupParametersClient) Group(ctx context.Context, options GroupParametersOptions, opts *OverrideGroupParametersClientGroupOptions) (OverrideGroupParametersClientGroupResponse, error) {
	var err error
	const operationName = "OverrideGroupParametersClient.Group"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.groupCreateRequest(ctx, options, opts)
	if err != nil {
		return OverrideGroupParametersClientGroupResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return OverrideGroupParametersClientGroupResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusNoContent) {
		err = runtime.NewResponseError(httpResp)
		return OverrideGroupParametersClientGroupResponse{}, err
	}
	return OverrideGroupParametersClientGroupResponse{}, nil
}

// groupCreateRequest creates the Group request.
func (client *OverrideGroupParametersClient) groupCreateRequest(ctx context.Context, options GroupParametersOptions, _ *OverrideGroupParametersClientGroupOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/override/group"
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	reqQP := req.Raw().URL.Query()
	reqQP.Set("param1", options.Param1)
	reqQP.Set("param2", options.Param2)
	req.Raw().URL.RawQuery = reqQP.Encode()
	return req, nil
}
