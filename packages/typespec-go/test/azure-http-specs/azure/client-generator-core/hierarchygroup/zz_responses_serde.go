// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package hierarchygroup

// UnmarshalJSON implements the json.Unmarshaller interface for type HierarchyBuildingAnimalOperationsClientUpdateDogAsAnimalResponse.
func (h *HierarchyBuildingAnimalOperationsClientUpdateDogAsAnimalResponse) UnmarshalJSON(data []byte) error {
	res, err := unmarshalAnimalClassification(data)
	if err != nil {
		return err
	}
	h.AnimalClassification = res
	return nil
}

// UnmarshalJSON implements the json.Unmarshaller interface for type HierarchyBuildingAnimalOperationsClientUpdatePetAsAnimalResponse.
func (h *HierarchyBuildingAnimalOperationsClientUpdatePetAsAnimalResponse) UnmarshalJSON(data []byte) error {
	res, err := unmarshalAnimalClassification(data)
	if err != nil {
		return err
	}
	h.AnimalClassification = res
	return nil
}

// UnmarshalJSON implements the json.Unmarshaller interface for type HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse.
func (h *HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse) UnmarshalJSON(data []byte) error {
	res, err := unmarshalPetClassification(data)
	if err != nil {
		return err
	}
	h.PetClassification = res
	return nil
}

// UnmarshalJSON implements the json.Unmarshaller interface for type HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse.
func (h *HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse) UnmarshalJSON(data []byte) error {
	res, err := unmarshalPetClassification(data)
	if err != nil {
		return err
	}
	h.PetClassification = res
	return nil
}

// UnmarshalJSON implements the json.Unmarshaller interface for type HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse.
func (h *HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse) UnmarshalJSON(data []byte) error {
	res, err := unmarshalPetClassification(data)
	if err != nil {
		return err
	}
	h.PetClassification = res
	return nil
}
