// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package hierarchygroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// HierarchyBuildingClient - Test for @hierarchyBuilding decorator.
// Don't use this type directly, use a constructor function instead.
type HierarchyBuildingClient struct {
	internal *azcore.Client
	endpoint string
}

// UpdateDog - Update a dog
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - HierarchyBuildingClientUpdateDogOptions contains the optional parameters for the HierarchyBuildingClient.UpdateDog
//     method.
func (client *HierarchyBuildingClient) UpdateDog(ctx context.Context, animal AnimalClassification, options *HierarchyBuildingClientUpdateDogOptions) (HierarchyBuildingClientUpdateDogResponse, error) {
	var err error
	const operationName = "HierarchyBuildingClient.UpdateDog"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.updateDogCreateRequest(ctx, animal, options)
	if err != nil {
		return HierarchyBuildingClientUpdateDogResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return HierarchyBuildingClientUpdateDogResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return HierarchyBuildingClientUpdateDogResponse{}, err
	}
	resp, err := client.updateDogHandleResponse(httpResp)
	return resp, err
}

// updateDogCreateRequest creates the UpdateDog request.
func (client *HierarchyBuildingClient) updateDogCreateRequest(ctx context.Context, animal AnimalClassification, _ *HierarchyBuildingClientUpdateDogOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/hierarchy-building/animal/dog"
	req, err := runtime.NewRequest(ctx, http.MethodPut, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, animal); err != nil {
		return nil, err
	}
	return req, nil
}

// updateDogHandleResponse handles the UpdateDog response.
func (client *HierarchyBuildingClient) updateDogHandleResponse(resp *http.Response) (HierarchyBuildingClientUpdateDogResponse, error) {
	result := HierarchyBuildingClientUpdateDogResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result); err != nil {
		return HierarchyBuildingClientUpdateDogResponse{}, err
	}
	return result, nil
}

// UpdatePet - Update a pet
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - HierarchyBuildingClientUpdatePetOptions contains the optional parameters for the HierarchyBuildingClient.UpdatePet
//     method.
func (client *HierarchyBuildingClient) UpdatePet(ctx context.Context, animal AnimalClassification, options *HierarchyBuildingClientUpdatePetOptions) (HierarchyBuildingClientUpdatePetResponse, error) {
	var err error
	const operationName = "HierarchyBuildingClient.UpdatePet"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.updatePetCreateRequest(ctx, animal, options)
	if err != nil {
		return HierarchyBuildingClientUpdatePetResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return HierarchyBuildingClientUpdatePetResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return HierarchyBuildingClientUpdatePetResponse{}, err
	}
	resp, err := client.updatePetHandleResponse(httpResp)
	return resp, err
}

// updatePetCreateRequest creates the UpdatePet request.
func (client *HierarchyBuildingClient) updatePetCreateRequest(ctx context.Context, animal AnimalClassification, _ *HierarchyBuildingClientUpdatePetOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/hierarchy-building/animal/pet"
	req, err := runtime.NewRequest(ctx, http.MethodPut, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, animal); err != nil {
		return nil, err
	}
	return req, nil
}

// updatePetHandleResponse handles the UpdatePet response.
func (client *HierarchyBuildingClient) updatePetHandleResponse(resp *http.Response) (HierarchyBuildingClientUpdatePetResponse, error) {
	result := HierarchyBuildingClientUpdatePetResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result); err != nil {
		return HierarchyBuildingClientUpdatePetResponse{}, err
	}
	return result, nil
}
