// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package hierarchygroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// HierarchyBuildingDogOperationsClient contains the methods for the HierarchyBuildingDogOperations group.
// Don't use this type directly, use [HierarchyBuildingClient.NewHierarchyBuildingDogOperationsClient] instead.
type HierarchyBuildingDogOperationsClient struct {
	internal *azcore.Client
	endpoint string
}

// UpdateDogAsDog - Update a dog as a dog
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - HierarchyBuildingDogOperationsClientUpdateDogAsDogOptions contains the optional parameters for the HierarchyBuildingDogOperationsClient.UpdateDogAsDog
//     method.
func (client *HierarchyBuildingDogOperationsClient) UpdateDogAsDog(ctx context.Context, dog Dog, options *HierarchyBuildingDogOperationsClientUpdateDogAsDogOptions) (HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse, error) {
	var err error
	const operationName = "HierarchyBuildingDogOperationsClient.UpdateDogAsDog"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.updateDogAsDogCreateRequest(ctx, dog, options)
	if err != nil {
		return HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse{}, err
	}
	resp, err := client.updateDogAsDogHandleResponse(httpResp)
	return resp, err
}

// updateDogAsDogCreateRequest creates the UpdateDogAsDog request.
func (client *HierarchyBuildingDogOperationsClient) updateDogAsDogCreateRequest(ctx context.Context, dog Dog, _ *HierarchyBuildingDogOperationsClientUpdateDogAsDogOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/hierarchy-building/dog/as-dog"
	req, err := runtime.NewRequest(ctx, http.MethodPut, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, dog); err != nil {
		return nil, err
	}
	return req, nil
}

// updateDogAsDogHandleResponse handles the UpdateDogAsDog response.
func (client *HierarchyBuildingDogOperationsClient) updateDogAsDogHandleResponse(resp *http.Response) (HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse, error) {
	result := HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result); err != nil {
		return HierarchyBuildingDogOperationsClientUpdateDogAsDogResponse{}, err
	}
	return result, nil
}
