// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package hierarchygroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// HierarchyBuildingPetOperationsClient contains the methods for the HierarchyBuildingPetOperations group.
// Don't use this type directly, use [HierarchyBuildingClient.NewHierarchyBuildingPetOperationsClient] instead.
type HierarchyBuildingPetOperationsClient struct {
	internal *azcore.Client
	endpoint string
}

// UpdateDogAsPet - Update a dog as a pet
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - HierarchyBuildingPetOperationsClientUpdateDogAsPetOptions contains the optional parameters for the HierarchyBuildingPetOperationsClient.UpdateDogAsPet
//     method.
func (client *HierarchyBuildingPetOperationsClient) UpdateDogAsPet(ctx context.Context, pet PetClassification, options *HierarchyBuildingPetOperationsClientUpdateDogAsPetOptions) (HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse, error) {
	var err error
	const operationName = "HierarchyBuildingPetOperationsClient.UpdateDogAsPet"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.updateDogAsPetCreateRequest(ctx, pet, options)
	if err != nil {
		return HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse{}, err
	}
	resp, err := client.updateDogAsPetHandleResponse(httpResp)
	return resp, err
}

// updateDogAsPetCreateRequest creates the UpdateDogAsPet request.
func (client *HierarchyBuildingPetOperationsClient) updateDogAsPetCreateRequest(ctx context.Context, pet PetClassification, _ *HierarchyBuildingPetOperationsClientUpdateDogAsPetOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/hierarchy-building/dog/as-pet"
	req, err := runtime.NewRequest(ctx, http.MethodPut, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, pet); err != nil {
		return nil, err
	}
	return req, nil
}

// updateDogAsPetHandleResponse handles the UpdateDogAsPet response.
func (client *HierarchyBuildingPetOperationsClient) updateDogAsPetHandleResponse(resp *http.Response) (HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse, error) {
	result := HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result); err != nil {
		return HierarchyBuildingPetOperationsClientUpdateDogAsPetResponse{}, err
	}
	return result, nil
}

// UpdatePetAsPet - Update a pet as a pet
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - HierarchyBuildingPetOperationsClientUpdatePetAsPetOptions contains the optional parameters for the HierarchyBuildingPetOperationsClient.UpdatePetAsPet
//     method.
func (client *HierarchyBuildingPetOperationsClient) UpdatePetAsPet(ctx context.Context, pet PetClassification, options *HierarchyBuildingPetOperationsClientUpdatePetAsPetOptions) (HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse, error) {
	var err error
	const operationName = "HierarchyBuildingPetOperationsClient.UpdatePetAsPet"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.updatePetAsPetCreateRequest(ctx, pet, options)
	if err != nil {
		return HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse{}, err
	}
	resp, err := client.updatePetAsPetHandleResponse(httpResp)
	return resp, err
}

// updatePetAsPetCreateRequest creates the UpdatePetAsPet request.
func (client *HierarchyBuildingPetOperationsClient) updatePetAsPetCreateRequest(ctx context.Context, pet PetClassification, _ *HierarchyBuildingPetOperationsClientUpdatePetAsPetOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/hierarchy-building/pet/as-pet"
	req, err := runtime.NewRequest(ctx, http.MethodPut, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	req.Raw().Header["Content-Type"] = []string{"application/json"}
	if err := runtime.MarshalAsJSON(req, pet); err != nil {
		return nil, err
	}
	return req, nil
}

// updatePetAsPetHandleResponse handles the UpdatePetAsPet response.
func (client *HierarchyBuildingPetOperationsClient) updatePetAsPetHandleResponse(resp *http.Response) (HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse, error) {
	result := HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result); err != nil {
		return HierarchyBuildingPetOperationsClientUpdatePetAsPetResponse{}, err
	}
	return result, nil
}
