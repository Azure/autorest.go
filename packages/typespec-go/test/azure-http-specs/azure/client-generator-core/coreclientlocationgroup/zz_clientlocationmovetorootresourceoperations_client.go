// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package coreclientlocationgroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// ClientLocationMoveToRootResourceOperationsClient contains the methods for the ClientLocationMoveToRootResourceOperations
// group.
// Don't use this type directly, use [ClientLocationMoveToRootClient.NewClientLocationMoveToRootResourceOperationsClient] instead.
type ClientLocationMoveToRootResourceOperationsClient struct {
	internal *azcore.Client
	endpoint string
}

// GetResource -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - ClientLocationMoveToRootResourceOperationsClientGetResourceOptions contains the optional parameters for the ClientLocationMoveToRootResourceOperationsClient.GetResource
//     method.
func (client *ClientLocationMoveToRootResourceOperationsClient) GetResource(ctx context.Context, options *ClientLocationMoveToRootResourceOperationsClientGetResourceOptions) (ClientLocationMoveToRootResourceOperationsClientGetResourceResponse, error) {
	var err error
	const operationName = "ClientLocationMoveToRootResourceOperationsClient.GetResource"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.getResourceCreateRequest(ctx, options)
	if err != nil {
		return ClientLocationMoveToRootResourceOperationsClientGetResourceResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return ClientLocationMoveToRootResourceOperationsClientGetResourceResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusNoContent) {
		err = runtime.NewResponseError(httpResp)
		return ClientLocationMoveToRootResourceOperationsClientGetResourceResponse{}, err
	}
	return ClientLocationMoveToRootResourceOperationsClientGetResourceResponse{}, nil
}

// getResourceCreateRequest creates the GetResource request.
func (client *ClientLocationMoveToRootResourceOperationsClient) getResourceCreateRequest(ctx context.Context, _ *ClientLocationMoveToRootResourceOperationsClientGetResourceOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/client-location/resource"
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	return req, nil
}
