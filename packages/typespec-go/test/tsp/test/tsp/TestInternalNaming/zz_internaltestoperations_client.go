// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package TestInternalNaming

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// InternalTestOperationsClient contains the methods for the InternalTestOperations group.
// Don't use this type directly, use [InternalClient.NewInternalTestOperationsClient] instead.
type InternalTestOperationsClient struct {
	internal *azcore.Client
	endpoint string
}

// GetError -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - InternalTestOperationsClientGetErrorOptions contains the optional parameters for the InternalTestOperationsClient.GetError
//     method.
func (client *InternalTestOperationsClient) GetError(ctx context.Context, options *InternalTestOperationsClientGetErrorOptions) (InternalTestOperationsClientGetErrorResponse, error) {
	var err error
	req, err := client.getErrorCreateRequest(ctx, options)
	if err != nil {
		return InternalTestOperationsClientGetErrorResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return InternalTestOperationsClientGetErrorResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return InternalTestOperationsClientGetErrorResponse{}, err
	}
	resp, err := client.getErrorHandleResponse(httpResp)
	return resp, err
}

// getErrorCreateRequest creates the GetError request.
func (client *InternalTestOperationsClient) getErrorCreateRequest(ctx context.Context, _ *InternalTestOperationsClientGetErrorOptions) (*policy.Request, error) {
	urlPath := "/test"
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(client.endpoint, urlPath))
	if err != nil {
		return nil, err
	}
	req.Raw().Header["Accept"] = []string{"application/json"}
	return req, nil
}

// getErrorHandleResponse handles the GetError response.
func (client *InternalTestOperationsClient) getErrorHandleResponse(resp *http.Response) (InternalTestOperationsClientGetErrorResponse, error) {
	result := InternalTestOperationsClientGetErrorResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result.InternalACSMessageChannelEventError); err != nil {
		return InternalTestOperationsClientGetErrorResponse{}, err
	}
	return result, nil
}
