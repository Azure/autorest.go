// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package pageablegroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
)

// PageableClient - Test for pageable payload.
// Don't use this type directly, use NewPageableClientWithNoCredential() instead.
type PageableClient struct {
	internal *azcore.Client
	endpoint string
}

// PageableClientOptions contains the optional values for creating a [PageableClient].
type PageableClientOptions struct {
	azcore.ClientOptions
}

// NewPageableClientWithNoCredential creates a new instance of PageableClient with the specified values.
//   - endpoint - Service host
//   - options - Contains optional client configuration. Pass nil to accept the default values.
func NewPageableClientWithNoCredential(endpoint string, options *PageableClientOptions) (*PageableClient, error) {
	if options == nil {
		options = &PageableClientOptions{}
	}
	cl, err := azcore.NewClient(moduleName, moduleVersion, runtime.PipelineOptions{}, &options.ClientOptions)
	if err != nil {
		return nil, err
	}
	client := &PageableClient{
		endpoint: endpoint,
		internal: cl,
	}
	return client, nil
}

// NewPageablePageSizeClient creates a new instance of [PageablePageSizeClient].
func (client *PageableClient) NewPageablePageSizeClient() *PageablePageSizeClient {
	return &PageablePageSizeClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewPageableServerDrivenPaginationClient creates a new instance of [PageableServerDrivenPaginationClient].
func (client *PageableClient) NewPageableServerDrivenPaginationClient() *PageableServerDrivenPaginationClient {
	return &PageableServerDrivenPaginationClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}
