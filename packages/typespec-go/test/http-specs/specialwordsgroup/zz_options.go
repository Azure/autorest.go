// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package specialwordsgroup

// SpecialWordsModelPropertiesClientSameAsModelOptions contains the optional parameters for the SpecialWordsModelPropertiesClient.SameAsModel
// method.
type SpecialWordsModelPropertiesClientSameAsModelOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithAndOptions contains the optional parameters for the SpecialWordsModelsClient.WithAnd method.
type SpecialWordsModelsClientWithAndOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithAsOptions contains the optional parameters for the SpecialWordsModelsClient.WithAs method.
type SpecialWordsModelsClientWithAsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithAssertOptions contains the optional parameters for the SpecialWordsModelsClient.WithAssert
// method.
type SpecialWordsModelsClientWithAssertOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithAsyncOptions contains the optional parameters for the SpecialWordsModelsClient.WithAsync method.
type SpecialWordsModelsClientWithAsyncOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithAwaitOptions contains the optional parameters for the SpecialWordsModelsClient.WithAwait method.
type SpecialWordsModelsClientWithAwaitOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithBreakOptions contains the optional parameters for the SpecialWordsModelsClient.WithBreak method.
type SpecialWordsModelsClientWithBreakOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithClassOptions contains the optional parameters for the SpecialWordsModelsClient.WithClass method.
type SpecialWordsModelsClientWithClassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithConstructorOptions contains the optional parameters for the SpecialWordsModelsClient.WithConstructor
// method.
type SpecialWordsModelsClientWithConstructorOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithContinueOptions contains the optional parameters for the SpecialWordsModelsClient.WithContinue
// method.
type SpecialWordsModelsClientWithContinueOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithDefOptions contains the optional parameters for the SpecialWordsModelsClient.WithDef method.
type SpecialWordsModelsClientWithDefOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithDelOptions contains the optional parameters for the SpecialWordsModelsClient.WithDel method.
type SpecialWordsModelsClientWithDelOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithElifOptions contains the optional parameters for the SpecialWordsModelsClient.WithElif method.
type SpecialWordsModelsClientWithElifOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithElseOptions contains the optional parameters for the SpecialWordsModelsClient.WithElse method.
type SpecialWordsModelsClientWithElseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithExceptOptions contains the optional parameters for the SpecialWordsModelsClient.WithExcept
// method.
type SpecialWordsModelsClientWithExceptOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithExecOptions contains the optional parameters for the SpecialWordsModelsClient.WithExec method.
type SpecialWordsModelsClientWithExecOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithFinallyOptions contains the optional parameters for the SpecialWordsModelsClient.WithFinally
// method.
type SpecialWordsModelsClientWithFinallyOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithForOptions contains the optional parameters for the SpecialWordsModelsClient.WithFor method.
type SpecialWordsModelsClientWithForOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithFromOptions contains the optional parameters for the SpecialWordsModelsClient.WithFrom method.
type SpecialWordsModelsClientWithFromOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithGlobalOptions contains the optional parameters for the SpecialWordsModelsClient.WithGlobal
// method.
type SpecialWordsModelsClientWithGlobalOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithIfOptions contains the optional parameters for the SpecialWordsModelsClient.WithIf method.
type SpecialWordsModelsClientWithIfOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithImportOptions contains the optional parameters for the SpecialWordsModelsClient.WithImport
// method.
type SpecialWordsModelsClientWithImportOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithInOptions contains the optional parameters for the SpecialWordsModelsClient.WithIn method.
type SpecialWordsModelsClientWithInOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithIsOptions contains the optional parameters for the SpecialWordsModelsClient.WithIs method.
type SpecialWordsModelsClientWithIsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithLambdaOptions contains the optional parameters for the SpecialWordsModelsClient.WithLambda
// method.
type SpecialWordsModelsClientWithLambdaOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithNotOptions contains the optional parameters for the SpecialWordsModelsClient.WithNot method.
type SpecialWordsModelsClientWithNotOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithOrOptions contains the optional parameters for the SpecialWordsModelsClient.WithOr method.
type SpecialWordsModelsClientWithOrOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithPassOptions contains the optional parameters for the SpecialWordsModelsClient.WithPass method.
type SpecialWordsModelsClientWithPassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithRaiseOptions contains the optional parameters for the SpecialWordsModelsClient.WithRaise method.
type SpecialWordsModelsClientWithRaiseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithReturnOptions contains the optional parameters for the SpecialWordsModelsClient.WithReturn
// method.
type SpecialWordsModelsClientWithReturnOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithTryOptions contains the optional parameters for the SpecialWordsModelsClient.WithTry method.
type SpecialWordsModelsClientWithTryOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithWhileOptions contains the optional parameters for the SpecialWordsModelsClient.WithWhile method.
type SpecialWordsModelsClientWithWhileOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithWithOptions contains the optional parameters for the SpecialWordsModelsClient.WithWith method.
type SpecialWordsModelsClientWithWithOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsModelsClientWithYieldOptions contains the optional parameters for the SpecialWordsModelsClient.WithYield method.
type SpecialWordsModelsClientWithYieldOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientAndOptions contains the optional parameters for the SpecialWordsOperationsClient.And method.
type SpecialWordsOperationsClientAndOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientAsOptions contains the optional parameters for the SpecialWordsOperationsClient.As method.
type SpecialWordsOperationsClientAsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientAssertOptions contains the optional parameters for the SpecialWordsOperationsClient.Assert
// method.
type SpecialWordsOperationsClientAssertOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientAsyncOptions contains the optional parameters for the SpecialWordsOperationsClient.Async method.
type SpecialWordsOperationsClientAsyncOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientAwaitOptions contains the optional parameters for the SpecialWordsOperationsClient.Await method.
type SpecialWordsOperationsClientAwaitOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientBreakOptions contains the optional parameters for the SpecialWordsOperationsClient.Break method.
type SpecialWordsOperationsClientBreakOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientClassOptions contains the optional parameters for the SpecialWordsOperationsClient.Class method.
type SpecialWordsOperationsClientClassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientConstructorOptions contains the optional parameters for the SpecialWordsOperationsClient.Constructor
// method.
type SpecialWordsOperationsClientConstructorOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientContinueOptions contains the optional parameters for the SpecialWordsOperationsClient.Continue
// method.
type SpecialWordsOperationsClientContinueOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientDefOptions contains the optional parameters for the SpecialWordsOperationsClient.Def method.
type SpecialWordsOperationsClientDefOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientDelOptions contains the optional parameters for the SpecialWordsOperationsClient.Del method.
type SpecialWordsOperationsClientDelOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientElifOptions contains the optional parameters for the SpecialWordsOperationsClient.Elif method.
type SpecialWordsOperationsClientElifOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientElseOptions contains the optional parameters for the SpecialWordsOperationsClient.Else method.
type SpecialWordsOperationsClientElseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientExceptOptions contains the optional parameters for the SpecialWordsOperationsClient.Except
// method.
type SpecialWordsOperationsClientExceptOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientExecOptions contains the optional parameters for the SpecialWordsOperationsClient.Exec method.
type SpecialWordsOperationsClientExecOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientFinallyOptions contains the optional parameters for the SpecialWordsOperationsClient.Finally
// method.
type SpecialWordsOperationsClientFinallyOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientForOptions contains the optional parameters for the SpecialWordsOperationsClient.For method.
type SpecialWordsOperationsClientForOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientFromOptions contains the optional parameters for the SpecialWordsOperationsClient.From method.
type SpecialWordsOperationsClientFromOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientGlobalOptions contains the optional parameters for the SpecialWordsOperationsClient.Global
// method.
type SpecialWordsOperationsClientGlobalOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientIfOptions contains the optional parameters for the SpecialWordsOperationsClient.If method.
type SpecialWordsOperationsClientIfOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientImportOptions contains the optional parameters for the SpecialWordsOperationsClient.Import
// method.
type SpecialWordsOperationsClientImportOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientInOptions contains the optional parameters for the SpecialWordsOperationsClient.In method.
type SpecialWordsOperationsClientInOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientIsOptions contains the optional parameters for the SpecialWordsOperationsClient.Is method.
type SpecialWordsOperationsClientIsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientLambdaOptions contains the optional parameters for the SpecialWordsOperationsClient.Lambda
// method.
type SpecialWordsOperationsClientLambdaOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientNotOptions contains the optional parameters for the SpecialWordsOperationsClient.Not method.
type SpecialWordsOperationsClientNotOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientOrOptions contains the optional parameters for the SpecialWordsOperationsClient.Or method.
type SpecialWordsOperationsClientOrOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientPassOptions contains the optional parameters for the SpecialWordsOperationsClient.Pass method.
type SpecialWordsOperationsClientPassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientRaiseOptions contains the optional parameters for the SpecialWordsOperationsClient.Raise method.
type SpecialWordsOperationsClientRaiseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientReturnOptions contains the optional parameters for the SpecialWordsOperationsClient.Return
// method.
type SpecialWordsOperationsClientReturnOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientTryOptions contains the optional parameters for the SpecialWordsOperationsClient.Try method.
type SpecialWordsOperationsClientTryOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientWhileOptions contains the optional parameters for the SpecialWordsOperationsClient.While method.
type SpecialWordsOperationsClientWhileOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientWithOptions contains the optional parameters for the SpecialWordsOperationsClient.With method.
type SpecialWordsOperationsClientWithOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsOperationsClientYieldOptions contains the optional parameters for the SpecialWordsOperationsClient.Yield method.
type SpecialWordsOperationsClientYieldOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithAndOptions contains the optional parameters for the SpecialWordsParametersClient.WithAnd
// method.
type SpecialWordsParametersClientWithAndOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithAsOptions contains the optional parameters for the SpecialWordsParametersClient.WithAs
// method.
type SpecialWordsParametersClientWithAsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithAssertOptions contains the optional parameters for the SpecialWordsParametersClient.WithAssert
// method.
type SpecialWordsParametersClientWithAssertOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithAsyncOptions contains the optional parameters for the SpecialWordsParametersClient.WithAsync
// method.
type SpecialWordsParametersClientWithAsyncOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithAwaitOptions contains the optional parameters for the SpecialWordsParametersClient.WithAwait
// method.
type SpecialWordsParametersClientWithAwaitOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithBreakOptions contains the optional parameters for the SpecialWordsParametersClient.WithBreak
// method.
type SpecialWordsParametersClientWithBreakOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithCancellationTokenOptions contains the optional parameters for the SpecialWordsParametersClient.WithCancellationToken
// method.
type SpecialWordsParametersClientWithCancellationTokenOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithClassOptions contains the optional parameters for the SpecialWordsParametersClient.WithClass
// method.
type SpecialWordsParametersClientWithClassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithConstructorOptions contains the optional parameters for the SpecialWordsParametersClient.WithConstructor
// method.
type SpecialWordsParametersClientWithConstructorOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithContinueOptions contains the optional parameters for the SpecialWordsParametersClient.WithContinue
// method.
type SpecialWordsParametersClientWithContinueOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithDefOptions contains the optional parameters for the SpecialWordsParametersClient.WithDef
// method.
type SpecialWordsParametersClientWithDefOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithDelOptions contains the optional parameters for the SpecialWordsParametersClient.WithDel
// method.
type SpecialWordsParametersClientWithDelOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithElifOptions contains the optional parameters for the SpecialWordsParametersClient.WithElif
// method.
type SpecialWordsParametersClientWithElifOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithElseOptions contains the optional parameters for the SpecialWordsParametersClient.WithElse
// method.
type SpecialWordsParametersClientWithElseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithExceptOptions contains the optional parameters for the SpecialWordsParametersClient.WithExcept
// method.
type SpecialWordsParametersClientWithExceptOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithExecOptions contains the optional parameters for the SpecialWordsParametersClient.WithExec
// method.
type SpecialWordsParametersClientWithExecOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithFinallyOptions contains the optional parameters for the SpecialWordsParametersClient.WithFinally
// method.
type SpecialWordsParametersClientWithFinallyOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithForOptions contains the optional parameters for the SpecialWordsParametersClient.WithFor
// method.
type SpecialWordsParametersClientWithForOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithFromOptions contains the optional parameters for the SpecialWordsParametersClient.WithFrom
// method.
type SpecialWordsParametersClientWithFromOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithGlobalOptions contains the optional parameters for the SpecialWordsParametersClient.WithGlobal
// method.
type SpecialWordsParametersClientWithGlobalOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithIfOptions contains the optional parameters for the SpecialWordsParametersClient.WithIf
// method.
type SpecialWordsParametersClientWithIfOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithImportOptions contains the optional parameters for the SpecialWordsParametersClient.WithImport
// method.
type SpecialWordsParametersClientWithImportOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithInOptions contains the optional parameters for the SpecialWordsParametersClient.WithIn
// method.
type SpecialWordsParametersClientWithInOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithIsOptions contains the optional parameters for the SpecialWordsParametersClient.WithIs
// method.
type SpecialWordsParametersClientWithIsOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithLambdaOptions contains the optional parameters for the SpecialWordsParametersClient.WithLambda
// method.
type SpecialWordsParametersClientWithLambdaOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithNotOptions contains the optional parameters for the SpecialWordsParametersClient.WithNot
// method.
type SpecialWordsParametersClientWithNotOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithOrOptions contains the optional parameters for the SpecialWordsParametersClient.WithOr
// method.
type SpecialWordsParametersClientWithOrOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithPassOptions contains the optional parameters for the SpecialWordsParametersClient.WithPass
// method.
type SpecialWordsParametersClientWithPassOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithRaiseOptions contains the optional parameters for the SpecialWordsParametersClient.WithRaise
// method.
type SpecialWordsParametersClientWithRaiseOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithReturnOptions contains the optional parameters for the SpecialWordsParametersClient.WithReturn
// method.
type SpecialWordsParametersClientWithReturnOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithTryOptions contains the optional parameters for the SpecialWordsParametersClient.WithTry
// method.
type SpecialWordsParametersClientWithTryOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithWhileOptions contains the optional parameters for the SpecialWordsParametersClient.WithWhile
// method.
type SpecialWordsParametersClientWithWhileOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithWithOptions contains the optional parameters for the SpecialWordsParametersClient.WithWith
// method.
type SpecialWordsParametersClientWithWithOptions struct {
	// placeholder for future optional parameters
}

// SpecialWordsParametersClientWithYieldOptions contains the optional parameters for the SpecialWordsParametersClient.WithYield
// method.
type SpecialWordsParametersClientWithYieldOptions struct {
	// placeholder for future optional parameters
}
