// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package fake

import (
	"errors"
	"fmt"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
	"strings"
	"sync"
)

// AdditionalPropertiesServer is a fake server for instances of the addlpropsgroup.AdditionalPropertiesClient type.
type AdditionalPropertiesServer struct {
	// AdditionalPropertiesExtendsFloatServer contains the fakes for client AdditionalPropertiesExtendsFloatClient
	AdditionalPropertiesExtendsFloatServer AdditionalPropertiesExtendsFloatServer

	// AdditionalPropertiesExtendsModelArrayServer contains the fakes for client AdditionalPropertiesExtendsModelArrayClient
	AdditionalPropertiesExtendsModelArrayServer AdditionalPropertiesExtendsModelArrayServer

	// AdditionalPropertiesExtendsModelServer contains the fakes for client AdditionalPropertiesExtendsModelClient
	AdditionalPropertiesExtendsModelServer AdditionalPropertiesExtendsModelServer

	// AdditionalPropertiesExtendsStringServer contains the fakes for client AdditionalPropertiesExtendsStringClient
	AdditionalPropertiesExtendsStringServer AdditionalPropertiesExtendsStringServer

	// AdditionalPropertiesExtendsUnknownServer contains the fakes for client AdditionalPropertiesExtendsUnknownClient
	AdditionalPropertiesExtendsUnknownServer AdditionalPropertiesExtendsUnknownServer

	// AdditionalPropertiesExtendsUnknownDerivedServer contains the fakes for client AdditionalPropertiesExtendsUnknownDerivedClient
	AdditionalPropertiesExtendsUnknownDerivedServer AdditionalPropertiesExtendsUnknownDerivedServer

	// AdditionalPropertiesExtendsUnknownDiscriminatedServer contains the fakes for client AdditionalPropertiesExtendsUnknownDiscriminatedClient
	AdditionalPropertiesExtendsUnknownDiscriminatedServer AdditionalPropertiesExtendsUnknownDiscriminatedServer

	// AdditionalPropertiesIsFloatServer contains the fakes for client AdditionalPropertiesIsFloatClient
	AdditionalPropertiesIsFloatServer AdditionalPropertiesIsFloatServer

	// AdditionalPropertiesIsModelArrayServer contains the fakes for client AdditionalPropertiesIsModelArrayClient
	AdditionalPropertiesIsModelArrayServer AdditionalPropertiesIsModelArrayServer

	// AdditionalPropertiesIsModelServer contains the fakes for client AdditionalPropertiesIsModelClient
	AdditionalPropertiesIsModelServer AdditionalPropertiesIsModelServer

	// AdditionalPropertiesIsStringServer contains the fakes for client AdditionalPropertiesIsStringClient
	AdditionalPropertiesIsStringServer AdditionalPropertiesIsStringServer

	// AdditionalPropertiesIsUnknownServer contains the fakes for client AdditionalPropertiesIsUnknownClient
	AdditionalPropertiesIsUnknownServer AdditionalPropertiesIsUnknownServer

	// AdditionalPropertiesIsUnknownDerivedServer contains the fakes for client AdditionalPropertiesIsUnknownDerivedClient
	AdditionalPropertiesIsUnknownDerivedServer AdditionalPropertiesIsUnknownDerivedServer

	// AdditionalPropertiesIsUnknownDiscriminatedServer contains the fakes for client AdditionalPropertiesIsUnknownDiscriminatedClient
	AdditionalPropertiesIsUnknownDiscriminatedServer AdditionalPropertiesIsUnknownDiscriminatedServer
}

// NewAdditionalPropertiesServerTransport creates a new instance of AdditionalPropertiesServerTransport with the provided implementation.
// The returned AdditionalPropertiesServerTransport instance is connected to an instance of addlpropsgroup.AdditionalPropertiesClient via the
// azcore.ClientOptions.Transporter field in the client's constructor parameters.
func NewAdditionalPropertiesServerTransport(srv *AdditionalPropertiesServer) *AdditionalPropertiesServerTransport {
	return &AdditionalPropertiesServerTransport{srv: srv}
}

// AdditionalPropertiesServerTransport connects instances of addlpropsgroup.AdditionalPropertiesClient to instances of AdditionalPropertiesServer.
// Don't use this type directly, use NewAdditionalPropertiesServerTransport instead.
type AdditionalPropertiesServerTransport struct {
	srv                                                     *AdditionalPropertiesServer
	trMu                                                    sync.Mutex
	trAdditionalPropertiesExtendsFloatServer                *AdditionalPropertiesExtendsFloatServerTransport
	trAdditionalPropertiesExtendsModelArrayServer           *AdditionalPropertiesExtendsModelArrayServerTransport
	trAdditionalPropertiesExtendsModelServer                *AdditionalPropertiesExtendsModelServerTransport
	trAdditionalPropertiesExtendsStringServer               *AdditionalPropertiesExtendsStringServerTransport
	trAdditionalPropertiesExtendsUnknownServer              *AdditionalPropertiesExtendsUnknownServerTransport
	trAdditionalPropertiesExtendsUnknownDerivedServer       *AdditionalPropertiesExtendsUnknownDerivedServerTransport
	trAdditionalPropertiesExtendsUnknownDiscriminatedServer *AdditionalPropertiesExtendsUnknownDiscriminatedServerTransport
	trAdditionalPropertiesIsFloatServer                     *AdditionalPropertiesIsFloatServerTransport
	trAdditionalPropertiesIsModelArrayServer                *AdditionalPropertiesIsModelArrayServerTransport
	trAdditionalPropertiesIsModelServer                     *AdditionalPropertiesIsModelServerTransport
	trAdditionalPropertiesIsStringServer                    *AdditionalPropertiesIsStringServerTransport
	trAdditionalPropertiesIsUnknownServer                   *AdditionalPropertiesIsUnknownServerTransport
	trAdditionalPropertiesIsUnknownDerivedServer            *AdditionalPropertiesIsUnknownDerivedServerTransport
	trAdditionalPropertiesIsUnknownDiscriminatedServer      *AdditionalPropertiesIsUnknownDiscriminatedServerTransport
}

// Do implements the policy.Transporter interface for AdditionalPropertiesServerTransport.
func (a *AdditionalPropertiesServerTransport) Do(req *http.Request) (*http.Response, error) {
	rawMethod := req.Context().Value(runtime.CtxAPINameKey{})
	method, ok := rawMethod.(string)
	if !ok {
		return nil, nonRetriableError{errors.New("unable to dispatch request, missing value for CtxAPINameKey")}
	}

	return a.dispatchToClientFake(req, method[:strings.Index(method, ".")])
}

func (a *AdditionalPropertiesServerTransport) dispatchToClientFake(req *http.Request, client string) (*http.Response, error) {
	var resp *http.Response
	var err error

	switch client {
	case "AdditionalPropertiesExtendsFloatClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsFloatServer, func() *AdditionalPropertiesExtendsFloatServerTransport {
			return NewAdditionalPropertiesExtendsFloatServerTransport(&a.srv.AdditionalPropertiesExtendsFloatServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsFloatServer.Do(req)
	case "AdditionalPropertiesExtendsModelArrayClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsModelArrayServer, func() *AdditionalPropertiesExtendsModelArrayServerTransport {
			return NewAdditionalPropertiesExtendsModelArrayServerTransport(&a.srv.AdditionalPropertiesExtendsModelArrayServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsModelArrayServer.Do(req)
	case "AdditionalPropertiesExtendsModelClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsModelServer, func() *AdditionalPropertiesExtendsModelServerTransport {
			return NewAdditionalPropertiesExtendsModelServerTransport(&a.srv.AdditionalPropertiesExtendsModelServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsModelServer.Do(req)
	case "AdditionalPropertiesExtendsStringClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsStringServer, func() *AdditionalPropertiesExtendsStringServerTransport {
			return NewAdditionalPropertiesExtendsStringServerTransport(&a.srv.AdditionalPropertiesExtendsStringServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsStringServer.Do(req)
	case "AdditionalPropertiesExtendsUnknownClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsUnknownServer, func() *AdditionalPropertiesExtendsUnknownServerTransport {
			return NewAdditionalPropertiesExtendsUnknownServerTransport(&a.srv.AdditionalPropertiesExtendsUnknownServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsUnknownServer.Do(req)
	case "AdditionalPropertiesExtendsUnknownDerivedClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsUnknownDerivedServer, func() *AdditionalPropertiesExtendsUnknownDerivedServerTransport {
			return NewAdditionalPropertiesExtendsUnknownDerivedServerTransport(&a.srv.AdditionalPropertiesExtendsUnknownDerivedServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsUnknownDerivedServer.Do(req)
	case "AdditionalPropertiesExtendsUnknownDiscriminatedClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesExtendsUnknownDiscriminatedServer, func() *AdditionalPropertiesExtendsUnknownDiscriminatedServerTransport {
			return NewAdditionalPropertiesExtendsUnknownDiscriminatedServerTransport(&a.srv.AdditionalPropertiesExtendsUnknownDiscriminatedServer)
		})
		resp, err = a.trAdditionalPropertiesExtendsUnknownDiscriminatedServer.Do(req)
	case "AdditionalPropertiesIsFloatClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsFloatServer, func() *AdditionalPropertiesIsFloatServerTransport {
			return NewAdditionalPropertiesIsFloatServerTransport(&a.srv.AdditionalPropertiesIsFloatServer)
		})
		resp, err = a.trAdditionalPropertiesIsFloatServer.Do(req)
	case "AdditionalPropertiesIsModelArrayClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsModelArrayServer, func() *AdditionalPropertiesIsModelArrayServerTransport {
			return NewAdditionalPropertiesIsModelArrayServerTransport(&a.srv.AdditionalPropertiesIsModelArrayServer)
		})
		resp, err = a.trAdditionalPropertiesIsModelArrayServer.Do(req)
	case "AdditionalPropertiesIsModelClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsModelServer, func() *AdditionalPropertiesIsModelServerTransport {
			return NewAdditionalPropertiesIsModelServerTransport(&a.srv.AdditionalPropertiesIsModelServer)
		})
		resp, err = a.trAdditionalPropertiesIsModelServer.Do(req)
	case "AdditionalPropertiesIsStringClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsStringServer, func() *AdditionalPropertiesIsStringServerTransport {
			return NewAdditionalPropertiesIsStringServerTransport(&a.srv.AdditionalPropertiesIsStringServer)
		})
		resp, err = a.trAdditionalPropertiesIsStringServer.Do(req)
	case "AdditionalPropertiesIsUnknownClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsUnknownServer, func() *AdditionalPropertiesIsUnknownServerTransport {
			return NewAdditionalPropertiesIsUnknownServerTransport(&a.srv.AdditionalPropertiesIsUnknownServer)
		})
		resp, err = a.trAdditionalPropertiesIsUnknownServer.Do(req)
	case "AdditionalPropertiesIsUnknownDerivedClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsUnknownDerivedServer, func() *AdditionalPropertiesIsUnknownDerivedServerTransport {
			return NewAdditionalPropertiesIsUnknownDerivedServerTransport(&a.srv.AdditionalPropertiesIsUnknownDerivedServer)
		})
		resp, err = a.trAdditionalPropertiesIsUnknownDerivedServer.Do(req)
	case "AdditionalPropertiesIsUnknownDiscriminatedClient":
		initServer(&a.trMu, &a.trAdditionalPropertiesIsUnknownDiscriminatedServer, func() *AdditionalPropertiesIsUnknownDiscriminatedServerTransport {
			return NewAdditionalPropertiesIsUnknownDiscriminatedServerTransport(&a.srv.AdditionalPropertiesIsUnknownDiscriminatedServer)
		})
		resp, err = a.trAdditionalPropertiesIsUnknownDiscriminatedServer.Do(req)
	default:
		err = fmt.Errorf("unhandled client %s", client)
	}

	return resp, err
}
