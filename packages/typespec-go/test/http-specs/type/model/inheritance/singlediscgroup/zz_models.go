// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package singlediscgroup

// Bird - This is base model for polymorphic single level inheritance with a discriminator.
type Bird struct {
	// REQUIRED
	Kind *string

	// REQUIRED
	Wingspan *int32
}

// GetBird implements the BirdClassification interface for type Bird.
func (b *Bird) GetBird() *Bird { return b }

// Dinosaur - Define a base class in the legacy way. Discriminator property is not explicitly defined in the model.
type Dinosaur struct {
	// REQUIRED; Discriminator property for Dinosaur.
	Kind *string

	// REQUIRED
	Size *int32
}

// GetDinosaur implements the DinosaurClassification interface for type Dinosaur.
func (d *Dinosaur) GetDinosaur() *Dinosaur { return d }

// Eagle - The second level model in polymorphic single levels inheritance which contains references to other polymorphic
// instances.
type Eagle struct {
	// CONSTANT; undefinedField has constant value "eagle", any specified value is ignored.
	Kind *string

	// REQUIRED
	Wingspan *int32
	Friends  []BirdClassification
	Hate     map[string]BirdClassification
	Partner  BirdClassification
}

// GetBird implements the BirdClassification interface for type Eagle.
func (e *Eagle) GetBird() *Bird {
	return &Bird{
		Kind:     e.Kind,
		Wingspan: e.Wingspan,
	}
}

// Goose - The second level model in polymorphic single level inheritance.
type Goose struct {
	// CONSTANT; undefinedField has constant value "goose", any specified value is ignored.
	Kind *string

	// REQUIRED
	Wingspan *int32
}

// GetBird implements the BirdClassification interface for type Goose.
func (g *Goose) GetBird() *Bird {
	return &Bird{
		Kind:     g.Kind,
		Wingspan: g.Wingspan,
	}
}

// SeaGull - The second level model in polymorphic single level inheritance.
type SeaGull struct {
	// CONSTANT; undefinedField has constant value "seagull", any specified value is ignored.
	Kind *string

	// REQUIRED
	Wingspan *int32
}

// GetBird implements the BirdClassification interface for type SeaGull.
func (s *SeaGull) GetBird() *Bird {
	return &Bird{
		Kind:     s.Kind,
		Wingspan: s.Wingspan,
	}
}

// Sparrow - The second level model in polymorphic single level inheritance.
type Sparrow struct {
	// CONSTANT; undefinedField has constant value "sparrow", any specified value is ignored.
	Kind *string

	// REQUIRED
	Wingspan *int32
}

// GetBird implements the BirdClassification interface for type Sparrow.
func (s *Sparrow) GetBird() *Bird {
	return &Bird{
		Kind:     s.Kind,
		Wingspan: s.Wingspan,
	}
}

// TRex - The second level legacy model in polymorphic single level inheritance.
type TRex struct {
	// REQUIRED
	Kind *string

	// REQUIRED
	Size *int32
}

// GetDinosaur implements the DinosaurClassification interface for type TRex.
func (t *TRex) GetDinosaur() *Dinosaur {
	return &Dinosaur{
		Kind: t.Kind,
		Size: t.Size,
	}
}
