// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package datetimegroup

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
)

// DatetimeClient - Test for encode decorator on datetime.
// Don't use this type directly, use NewDatetimeClientWithNoCredential() instead.
type DatetimeClient struct {
	internal *azcore.Client
	endpoint string
}

// DatetimeClientOptions contains the optional values for creating a [DatetimeClient].
type DatetimeClientOptions struct {
	azcore.ClientOptions
}

// NewDatetimeClientWithNoCredential creates a new instance of DatetimeClient with the specified values.
//   - endpoint - Service host
//   - DatetimeClientOptions - DatetimeClientOptions contains the optional values for creating a [DatetimeClient]
func NewDatetimeClientWithNoCredential(endpoint string, options *DatetimeClientOptions) (*DatetimeClient, error) {
	if options == nil {
		options = &DatetimeClientOptions{}
	}
	cl, err := azcore.NewClient(moduleName, moduleVersion, runtime.PipelineOptions{}, &options.ClientOptions)
	if err != nil {
		return nil, err
	}
	client := &DatetimeClient{
		endpoint: endpoint,
		internal: cl,
	}
	return client, nil
}

// NewDatetimeHeaderClient creates a new instance of [DatetimeHeaderClient].
func (client *DatetimeClient) NewDatetimeHeaderClient() *DatetimeHeaderClient {
	return &DatetimeHeaderClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewDatetimePropertyClient creates a new instance of [DatetimePropertyClient].
func (client *DatetimeClient) NewDatetimePropertyClient() *DatetimePropertyClient {
	return &DatetimePropertyClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewDatetimeQueryClient creates a new instance of [DatetimeQueryClient].
func (client *DatetimeClient) NewDatetimeQueryClient() *DatetimeQueryClient {
	return &DatetimeQueryClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}

// NewDatetimeResponseHeaderClient creates a new instance of [DatetimeResponseHeaderClient].
func (client *DatetimeClient) NewDatetimeResponseHeaderClient() *DatetimeResponseHeaderClient {
	return &DatetimeResponseHeaderClient{
		internal: client.internal,
		endpoint: client.endpoint,
	}
}
