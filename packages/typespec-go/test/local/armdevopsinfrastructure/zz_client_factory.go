// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armdevopsinfrastructure

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	internal *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		internal: internal,
	}, nil
}

// NewImageVersionsClient creates a new instance of ImageVersionsClient.
func (c *ClientFactory) NewImageVersionsClient(subscriptionID string) *ImageVersionsClient {
	return &ImageVersionsClient{
		subscriptionID: subscriptionID,
		internal:       c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewPoolsClient creates a new instance of PoolsClient.
func (c *ClientFactory) NewPoolsClient(subscriptionID string) *PoolsClient {
	return &PoolsClient{
		subscriptionID: subscriptionID,
		internal:       c.internal,
	}
}

// NewResourceDetailsClient creates a new instance of ResourceDetailsClient.
func (c *ClientFactory) NewResourceDetailsClient(subscriptionID string) *ResourceDetailsClient {
	return &ResourceDetailsClient{
		subscriptionID: subscriptionID,
		internal:       c.internal,
	}
}

// NewSKUClient creates a new instance of SKUClient.
func (c *ClientFactory) NewSKUClient(subscriptionID string) *SKUClient {
	return &SKUClient{
		subscriptionID: subscriptionID,
		internal:       c.internal,
	}
}

// NewSubscriptionUsagesClient creates a new instance of SubscriptionUsagesClient.
func (c *ClientFactory) NewSubscriptionUsagesClient(subscriptionID string) *SubscriptionUsagesClient {
	return &SubscriptionUsagesClient{
		subscriptionID: subscriptionID,
		internal:       c.internal,
	}
}
