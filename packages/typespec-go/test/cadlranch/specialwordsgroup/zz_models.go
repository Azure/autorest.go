//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package specialwordsgroup

type And struct {
	// REQUIRED
	Name *string
}

type As struct {
	// REQUIRED
	Name *string
}

type Assert struct {
	// REQUIRED
	Name *string
}

type Async struct {
	// REQUIRED
	Name *string
}

type Await struct {
	// REQUIRED
	Name *string
}

type Break struct {
	// REQUIRED
	Name *string
}

type Class struct {
	// REQUIRED
	Name *string
}

type Constructor struct {
	// REQUIRED
	Name *string
}

type Continue struct {
	// REQUIRED
	Name *string
}

type Def struct {
	// REQUIRED
	Name *string
}

type Del struct {
	// REQUIRED
	Name *string
}

type Elif struct {
	// REQUIRED
	Name *string
}

type Else struct {
	// REQUIRED
	Name *string
}

type Except struct {
	// REQUIRED
	Name *string
}

type Exec struct {
	// REQUIRED
	Name *string
}

type Finally struct {
	// REQUIRED
	Name *string
}

type For struct {
	// REQUIRED
	Name *string
}

type From struct {
	// REQUIRED
	Name *string
}

type Global struct {
	// REQUIRED
	Name *string
}

type If struct {
	// REQUIRED
	Name *string
}

type Import struct {
	// REQUIRED
	Name *string
}

type In struct {
	// REQUIRED
	Name *string
}

type Is struct {
	// REQUIRED
	Name *string
}

type Lambda struct {
	// REQUIRED
	Name *string
}

type Not struct {
	// REQUIRED
	Name *string
}

type Or struct {
	// REQUIRED
	Name *string
}

type Pass struct {
	// REQUIRED
	Name *string
}

type Raise struct {
	// REQUIRED
	Name *string
}

type Return struct {
	// REQUIRED
	Name *string
}

type SameAsModel struct {
	// REQUIRED
	SameAsModel *string
}

type Try struct {
	// REQUIRED
	Name *string
}

type While struct {
	// REQUIRED
	Name *string
}

type With struct {
	// REQUIRED
	Name *string
}

type Yield struct {
	// REQUIRED
	Name *string
}
