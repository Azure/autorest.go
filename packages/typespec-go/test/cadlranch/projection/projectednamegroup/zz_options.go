// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package projectednamegroup

// ProjectedNameClientClientNameOptions contains the optional parameters for the ProjectedNameClient.ClientName method.
type ProjectedNameClientClientNameOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNameClientParameterOptions contains the optional parameters for the ProjectedNameClient.Parameter method.
type ProjectedNameClientParameterOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNameModelClientClientOptions contains the optional parameters for the ProjectedNameModelClient.Client method.
type ProjectedNameModelClientClientOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNameModelClientLanguageOptions contains the optional parameters for the ProjectedNameModelClient.Language method.
type ProjectedNameModelClientLanguageOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNamePropertyClientClientOptions contains the optional parameters for the ProjectedNamePropertyClient.Client method.
type ProjectedNamePropertyClientClientOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNamePropertyClientJSONAndClientOptions contains the optional parameters for the ProjectedNamePropertyClient.JSONAndClient
// method.
type ProjectedNamePropertyClientJSONAndClientOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNamePropertyClientJSONOptions contains the optional parameters for the ProjectedNamePropertyClient.JSON method.
type ProjectedNamePropertyClientJSONOptions struct {
	// placeholder for future optional parameters
}

// ProjectedNamePropertyClientLanguageOptions contains the optional parameters for the ProjectedNamePropertyClient.Language
// method.
type ProjectedNamePropertyClientLanguageOptions struct {
	// placeholder for future optional parameters
}
