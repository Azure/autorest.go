// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package accessgroup

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
)

// AccessSharedModelInOperationClient contains the methods for the AccessSharedModelInOperation group.
// Don't use this type directly, use [AccessClient.NewAccessSharedModelInOperationClient] instead.
type AccessSharedModelInOperationClient struct {
	internal *azcore.Client
}

// Public -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - AccessSharedModelInOperationClientPublicOptions contains the optional parameters for the AccessSharedModelInOperationClient.Public
//     method.
func (client *AccessSharedModelInOperationClient) Public(ctx context.Context, name string, options *AccessSharedModelInOperationClientPublicOptions) (AccessSharedModelInOperationClientPublicResponse, error) {
	var err error
	const operationName = "AccessSharedModelInOperationClient.Public"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.publicCreateRequest(ctx, name, options)
	if err != nil {
		return AccessSharedModelInOperationClientPublicResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return AccessSharedModelInOperationClientPublicResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return AccessSharedModelInOperationClientPublicResponse{}, err
	}
	resp, err := client.publicHandleResponse(httpResp)
	return resp, err
}

// publicCreateRequest creates the Public request.
func (client *AccessSharedModelInOperationClient) publicCreateRequest(ctx context.Context, name string, _ *AccessSharedModelInOperationClientPublicOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/access/sharedModelInOperation/public"
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(host, urlPath))
	if err != nil {
		return nil, err
	}
	reqQP := req.Raw().URL.Query()
	reqQP.Set("name", name)
	req.Raw().URL.RawQuery = reqQP.Encode()
	req.Raw().Header["Accept"] = []string{"application/json"}
	return req, nil
}

// publicHandleResponse handles the Public response.
func (client *AccessSharedModelInOperationClient) publicHandleResponse(resp *http.Response) (AccessSharedModelInOperationClientPublicResponse, error) {
	result := AccessSharedModelInOperationClientPublicResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result.SharedModel); err != nil {
		return AccessSharedModelInOperationClientPublicResponse{}, err
	}
	return result, nil
}

// internalMethod -
// If the operation fails it returns an *azcore.ResponseError type.
//   - options - accessSharedModelInOperationClientinternalMethodOptions contains the optional parameters for the AccessSharedModelInOperationClient.internalMethod
//     method.
func (client *AccessSharedModelInOperationClient) internalMethod(ctx context.Context, name string, options *accessSharedModelInOperationClientinternalMethodOptions) (accessSharedModelInOperationClientinternalMethodResponse, error) {
	var err error
	const operationName = "AccessSharedModelInOperationClient.internalMethod"
	ctx = context.WithValue(ctx, runtime.CtxAPINameKey{}, operationName)
	ctx, endSpan := runtime.StartSpan(ctx, operationName, client.internal.Tracer(), nil)
	defer func() { endSpan(err) }()
	req, err := client.internalCreateRequest(ctx, name, options)
	if err != nil {
		return accessSharedModelInOperationClientinternalMethodResponse{}, err
	}
	httpResp, err := client.internal.Pipeline().Do(req)
	if err != nil {
		return accessSharedModelInOperationClientinternalMethodResponse{}, err
	}
	if !runtime.HasStatusCode(httpResp, http.StatusOK) {
		err = runtime.NewResponseError(httpResp)
		return accessSharedModelInOperationClientinternalMethodResponse{}, err
	}
	resp, err := client.internalHandleResponse(httpResp)
	return resp, err
}

// internalCreateRequest creates the internalMethod request.
func (client *AccessSharedModelInOperationClient) internalCreateRequest(ctx context.Context, name string, _ *accessSharedModelInOperationClientinternalMethodOptions) (*policy.Request, error) {
	urlPath := "/azure/client-generator-core/access/sharedModelInOperation/internal"
	req, err := runtime.NewRequest(ctx, http.MethodGet, runtime.JoinPaths(host, urlPath))
	if err != nil {
		return nil, err
	}
	reqQP := req.Raw().URL.Query()
	reqQP.Set("name", name)
	req.Raw().URL.RawQuery = reqQP.Encode()
	req.Raw().Header["Accept"] = []string{"application/json"}
	return req, nil
}

// internalHandleResponse handles the internalMethod response.
func (client *AccessSharedModelInOperationClient) internalHandleResponse(resp *http.Response) (accessSharedModelInOperationClientinternalMethodResponse, error) {
	result := accessSharedModelInOperationClientinternalMethodResponse{}
	if err := runtime.UnmarshalAsJSON(resp, &result.SharedModel); err != nil {
		return accessSharedModelInOperationClientinternalMethodResponse{}, err
	}
	return result, nil
}
