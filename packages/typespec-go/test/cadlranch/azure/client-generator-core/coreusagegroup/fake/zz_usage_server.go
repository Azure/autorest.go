// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package fake

import (
	"errors"
	"fmt"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime"
	"net/http"
	"strings"
	"sync"
)

// UsageServer is a fake server for instances of the coreusagegroup.UsageClient type.
type UsageServer struct {
	// ModelInOperationServer contains the fakes for client ModelInOperationClient
	ModelInOperationServer ModelInOperationServer
}

// NewUsageServerTransport creates a new instance of UsageServerTransport with the provided implementation.
// The returned UsageServerTransport instance is connected to an instance of coreusagegroup.UsageClient via the
// azcore.ClientOptions.Transporter field in the client's constructor parameters.
func NewUsageServerTransport(srv *UsageServer) *UsageServerTransport {
	return &UsageServerTransport{srv: srv}
}

// UsageServerTransport connects instances of coreusagegroup.UsageClient to instances of UsageServer.
// Don't use this type directly, use NewUsageServerTransport instead.
type UsageServerTransport struct {
	srv                      *UsageServer
	trMu                     sync.Mutex
	trModelInOperationServer *ModelInOperationServerTransport
}

// Do implements the policy.Transporter interface for UsageServerTransport.
func (u *UsageServerTransport) Do(req *http.Request) (*http.Response, error) {
	rawMethod := req.Context().Value(runtime.CtxAPINameKey{})
	method, ok := rawMethod.(string)
	if !ok {
		return nil, nonRetriableError{errors.New("unable to dispatch request, missing value for CtxAPINameKey")}
	}

	return u.dispatchToClientFake(req, method[:strings.Index(method, ".")])
}

func (u *UsageServerTransport) dispatchToClientFake(req *http.Request, client string) (*http.Response, error) {
	var resp *http.Response
	var err error

	switch client {
	case "ModelInOperationClient":
		initServer(&u.trMu, &u.trModelInOperationServer, func() *ModelInOperationServerTransport {
			return NewModelInOperationServerTransport(&u.srv.ModelInOperationServer)
		})
		resp, err = u.trModelInOperationServer.Do(req)
	default:
		err = fmt.Errorf("unhandled client %s", client)
	}

	return resp, err
}
