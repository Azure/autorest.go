//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package aztables

// ClientCreateOptions contains the optional parameters for the Client.Create method.
type ClientCreateOptions struct {
	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content
	// and return-content.
	ResponsePreference *ResponseFormat
}

// ClientDeleteEntityOptions contains the optional parameters for the Client.DeleteEntity method.
type ClientDeleteEntityOptions struct {
	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientDeleteOptions contains the optional parameters for the Client.Delete method.
type ClientDeleteOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string
}

// ClientGetAccessPolicyOptions contains the optional parameters for the Client.GetAccessPolicy method.
type ClientGetAccessPolicyOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientInsertEntityOptions contains the optional parameters for the Client.InsertEntity method.
type ClientInsertEntityOptions struct {
	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content
	// and return-content.
	ResponsePreference *ResponseFormat

	// The properties for the table entity.
	TableEntityProperties map[string]any

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientMergeEntityOptions contains the optional parameters for the Client.MergeEntity method.
type ClientMergeEntityOptions struct {
	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised.
	// To force an unconditional update, set to the wildcard character (*). If not
	// specified, an insert will be performed when no existing entity is found to update and a merge will be performed if an existing
	// entity is found.
	IfMatch *string

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientQueryEntitiesOptions contains the optional parameters for the Client.QueryEntities method.
type ClientQueryEntitiesOptions struct {
	// OData filter expression.
	Filter *string

	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// An entity query continuation token from a previous call.
	NextPartitionKey *string

	// An entity query continuation token from a previous call.
	NextRowKey *string

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId,
	// ResourceId".
	Select *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32

	// Maximum number of records to return.
	Top *int32
}

// ClientQueryEntityWithPartitionAndRowKeyOptions contains the optional parameters for the Client.QueryEntityWithPartitionAndRowKey
// method.
type ClientQueryEntityWithPartitionAndRowKeyOptions struct {
	// OData filter expression.
	Filter *string

	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId,
	// ResourceId".
	Select *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientQueryOptions contains the optional parameters for the Client.Query method.
type ClientQueryOptions struct {
	// OData filter expression.
	Filter *string

	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// A table query continuation token from a previous call.
	NextTableName *string

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId,
	// ResourceId".
	Select *string

	// Maximum number of records to return.
	Top *int32
}

// ClientSetAccessPolicyOptions contains the optional parameters for the Client.SetAccessPolicy method.
type ClientSetAccessPolicyOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ClientUpdateEntityOptions contains the optional parameters for the Client.UpdateEntity method.
type ClientUpdateEntityOptions struct {
	// Specifies the media type for the response.
	Format *ODataMetadataFormat

	// Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised.
	// To force an unconditional update, set to the wildcard character (*). If not
	// specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an
	// existing entity is found.
	IfMatch *string

	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ServiceClientGetPropertiesOptions contains the optional parameters for the ServiceClient.GetProperties method.
type ServiceClientGetPropertiesOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ServiceClientGetStatisticsOptions contains the optional parameters for the ServiceClient.GetStatistics method.
type ServiceClientGetStatisticsOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}

// ServiceClientSetPropertiesOptions contains the optional parameters for the ServiceClient.SetProperties method.
type ServiceClientSetPropertiesOptions struct {
	// Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics
	// logging is enabled.
	RequestID *string

	// The timeout parameter is expressed in seconds.
	Timeout *int32
}
