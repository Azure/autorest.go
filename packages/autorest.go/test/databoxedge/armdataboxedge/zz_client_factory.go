//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armdataboxedge

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	subscriptionID string
	internal       *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - subscriptionID - The subscription ID.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(subscriptionID string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		subscriptionID: subscriptionID,
		internal:       internal,
	}, nil
}

// NewAddonsClient creates a new instance of AddonsClient.
func (c *ClientFactory) NewAddonsClient() *AddonsClient {
	return &AddonsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewAlertsClient creates a new instance of AlertsClient.
func (c *ClientFactory) NewAlertsClient() *AlertsClient {
	return &AlertsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewAvailableSKUsClient creates a new instance of AvailableSKUsClient.
func (c *ClientFactory) NewAvailableSKUsClient() *AvailableSKUsClient {
	return &AvailableSKUsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewBandwidthSchedulesClient creates a new instance of BandwidthSchedulesClient.
func (c *ClientFactory) NewBandwidthSchedulesClient() *BandwidthSchedulesClient {
	return &BandwidthSchedulesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewContainersClient creates a new instance of ContainersClient.
func (c *ClientFactory) NewContainersClient() *ContainersClient {
	return &ContainersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDevicesClient creates a new instance of DevicesClient.
func (c *ClientFactory) NewDevicesClient() *DevicesClient {
	return &DevicesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewDiagnosticSettingsClient creates a new instance of DiagnosticSettingsClient.
func (c *ClientFactory) NewDiagnosticSettingsClient() *DiagnosticSettingsClient {
	return &DiagnosticSettingsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewJobsClient creates a new instance of JobsClient.
func (c *ClientFactory) NewJobsClient() *JobsClient {
	return &JobsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewMonitoringConfigClient creates a new instance of MonitoringConfigClient.
func (c *ClientFactory) NewMonitoringConfigClient() *MonitoringConfigClient {
	return &MonitoringConfigClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewNodesClient creates a new instance of NodesClient.
func (c *ClientFactory) NewNodesClient() *NodesClient {
	return &NodesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewOperationsStatusClient creates a new instance of OperationsStatusClient.
func (c *ClientFactory) NewOperationsStatusClient() *OperationsStatusClient {
	return &OperationsStatusClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewOrdersClient creates a new instance of OrdersClient.
func (c *ClientFactory) NewOrdersClient() *OrdersClient {
	return &OrdersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewRolesClient creates a new instance of RolesClient.
func (c *ClientFactory) NewRolesClient() *RolesClient {
	return &RolesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSharesClient creates a new instance of SharesClient.
func (c *ClientFactory) NewSharesClient() *SharesClient {
	return &SharesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewStorageAccountCredentialsClient creates a new instance of StorageAccountCredentialsClient.
func (c *ClientFactory) NewStorageAccountCredentialsClient() *StorageAccountCredentialsClient {
	return &StorageAccountCredentialsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewStorageAccountsClient creates a new instance of StorageAccountsClient.
func (c *ClientFactory) NewStorageAccountsClient() *StorageAccountsClient {
	return &StorageAccountsClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewSupportPackagesClient creates a new instance of SupportPackagesClient.
func (c *ClientFactory) NewSupportPackagesClient() *SupportPackagesClient {
	return &SupportPackagesClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewTriggersClient creates a new instance of TriggersClient.
func (c *ClientFactory) NewTriggersClient() *TriggersClient {
	return &TriggersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}

// NewUsersClient creates a new instance of UsersClient.
func (c *ClientFactory) NewUsersClient() *UsersClient {
	return &UsersClient{
		subscriptionID: c.subscriptionID,
		internal:       c.internal,
	}
}
