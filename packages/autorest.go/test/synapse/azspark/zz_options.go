//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azspark

// BatchClientCancelSparkBatchJobOptions contains the optional parameters for the BatchClient.CancelSparkBatchJob method.
type BatchClientCancelSparkBatchJobOptions struct {
	// placeholder for future optional parameters
}

// BatchClientCreateSparkBatchJobOptions contains the optional parameters for the BatchClient.CreateSparkBatchJob method.
type BatchClientCreateSparkBatchJobOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool
}

// BatchClientGetSparkBatchJobOptions contains the optional parameters for the BatchClient.GetSparkBatchJob method.
type BatchClientGetSparkBatchJobOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool
}

// BatchClientGetSparkBatchJobsOptions contains the optional parameters for the BatchClient.GetSparkBatchJobs method.
type BatchClientGetSparkBatchJobsOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool

	// Optional param specifying which index the list should begin from.
	From *int32

	// Optional param specifying the size of the returned list. By default it is 20 and that is the maximum.
	Size *int32
}

// SessionClientCancelSparkSessionOptions contains the optional parameters for the SessionClient.CancelSparkSession method.
type SessionClientCancelSparkSessionOptions struct {
	// placeholder for future optional parameters
}

// SessionClientCancelSparkStatementOptions contains the optional parameters for the SessionClient.CancelSparkStatement method.
type SessionClientCancelSparkStatementOptions struct {
	// placeholder for future optional parameters
}

// SessionClientCreateSparkSessionOptions contains the optional parameters for the SessionClient.CreateSparkSession method.
type SessionClientCreateSparkSessionOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool
}

// SessionClientCreateSparkStatementOptions contains the optional parameters for the SessionClient.CreateSparkStatement method.
type SessionClientCreateSparkStatementOptions struct {
	// placeholder for future optional parameters
}

// SessionClientGetSparkSessionOptions contains the optional parameters for the SessionClient.GetSparkSession method.
type SessionClientGetSparkSessionOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool
}

// SessionClientGetSparkSessionsOptions contains the optional parameters for the SessionClient.GetSparkSessions method.
type SessionClientGetSparkSessionsOptions struct {
	// Optional query param specifying whether detailed response is returned beyond plain livy.
	Detailed *bool

	// Optional param specifying which index the list should begin from.
	From *int32

	// Optional param specifying the size of the returned list. By default it is 20 and that is the maximum.
	Size *int32
}

// SessionClientGetSparkStatementOptions contains the optional parameters for the SessionClient.GetSparkStatement method.
type SessionClientGetSparkStatementOptions struct {
	// placeholder for future optional parameters
}

// SessionClientGetSparkStatementsOptions contains the optional parameters for the SessionClient.GetSparkStatements method.
type SessionClientGetSparkStatementsOptions struct {
	// placeholder for future optional parameters
}

// SessionClientResetSparkSessionTimeoutOptions contains the optional parameters for the SessionClient.ResetSparkSessionTimeout
// method.
type SessionClientResetSparkSessionTimeoutOptions struct {
	// placeholder for future optional parameters
}
