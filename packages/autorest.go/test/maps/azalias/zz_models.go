//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azalias

import "time"

// AliasesCreateResponse - The response model for the Alias Create API for the case when the alias was successfully created.
type AliasesCreateResponse struct {
	// READ-ONLY; The id for the alias.
	AliasID *string

	// READ-ONLY; The created timestamp for the alias.
	CreatedTimestamp *string

	// READ-ONLY; The id for the creator data item that this alias references (could be null if the alias has not been assigned).
	CreatorDataItemID *string

	// READ-ONLY; The timestamp of the last time the alias was assigned.
	LastUpdatedTimestamp *string
}

// ErrorResponse - An error happened.
type ErrorResponse struct {
	// READ-ONLY; The error code.
	Code *string

	// READ-ONLY; The error message.
	Message *string
}

// GeoJSONFeature - A valid GeoJSON Feature object type. Please refer to RFC 7946 [https://tools.ietf.org/html/rfc7946#section-3.2]
// for details.
type GeoJSONFeature struct {
	// REQUIRED; Specifies the GeoJSON type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString,
	// MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and
	// FeatureCollection.
	Type *GeoJSONObjectType

	// The type of the feature. The value depends on the data model the current feature is part of. Some data models may have
	// an empty value.
	FeatureType *string

	// Identifier for the feature.
	ID *string

	// Properties can contain any additional metadata about the Feature. Value can be any JSON object or a JSON null value
	Properties any

	// test enum with a default
	Setting *DataSetting
}

// GetGeoJSONObject implements the GeoJSONObjectClassification interface for type GeoJSONFeature.
func (g *GeoJSONFeature) GetGeoJSONObject() *GeoJSONObject {
	return &GeoJSONObject{
		ID:   g.ID,
		Type: g.Type,
	}
}

type GeoJSONFeatureData struct {
	// The type of the feature. The value depends on the data model the current feature is part of. Some data models may have
	// an empty value.
	FeatureType *string

	// Identifier for the feature.
	ID *string

	// Properties can contain any additional metadata about the Feature. Value can be any JSON object or a JSON null value
	Properties any

	// test enum with a default
	Setting *DataSetting
}

// GeoJSONObject - A valid GeoJSON object. Please refer to RFC 7946 [https://tools.ietf.org/html/rfc7946#section-3] for details.
type GeoJSONObject struct {
	// REQUIRED; Specifies the GeoJSON type. Must be one of the nine valid GeoJSON object types - Point, MultiPoint, LineString,
	// MultiLineString, Polygon, MultiPolygon, GeometryCollection, Feature and
	// FeatureCollection.
	Type *GeoJSONObjectType

	// Identifier for the feature.
	ID *string
}

// GetGeoJSONObject implements the GeoJSONObjectClassification interface for type GeoJSONObject.
func (g *GeoJSONObject) GetGeoJSONObject() *GeoJSONObject { return g }

// GeoJSONObjectNamedCollection - A named collection of GeoJSON object
type GeoJSONObjectNamedCollection struct {
	// Name of the collection
	CollectionName *string

	// Dictionary of
	Objects map[string]GeoJSONObjectClassification
}

type GeoJSONRecursiveDisciminators struct {
	// slice of map of map of discriminators
	CombinedOne []map[string]map[string]GeoJSONObjectClassification

	// map of slice of map of discriminators
	CombinedThree map[string][]map[string]GeoJSONObjectClassification

	// map of map of slice of discriminators
	CombinedTwo map[string]map[string][]GeoJSONObjectClassification

	// slice of slice of discriminators
	Items [][]GeoJSONObjectClassification

	// map of map of discriminators
	Objects map[string]map[string]GeoJSONObjectClassification
}

// ListResponse - The response model for the List API. Returns a list of all the previously created aliases.
type ListResponse struct {
	// READ-ONLY; A list of all the previously created aliases.
	Aliases []*ListItem

	// READ-ONLY; If present, the location of the next page of data.
	NextLink *string
}

type ParameterMetadataValue struct {
	// a JSON object
	Value any
}

// ParameterValuesValue - The value of a parameter.
type ParameterValuesValue struct {
	// The value of the parameter.
	Value any
}

type PolicyAssignmentProperties struct {
	// The display name of the policy assignment.
	DisplayName *string

	// Key-value pairs of extra info.
	Metadata map[string]*ParameterMetadataValue

	// The parameter values for the assigned policy rule. The keys are the parameter names.
	Parameters map[string]*ParameterValuesValue
}

// ScheduleCreateOrUpdateProperties - The parameters supplied to the create or update schedule operation.
type ScheduleCreateOrUpdateProperties struct {
	// A list of all the previously created aliases.
	Aliases []*string

	// Gets or sets the description of the schedule.
	Description *string

	// Gets or sets the interval of the schedule.
	Interval any

	// Gets or sets the start time of the schedule.
	StartTime *time.Time
}

type TypeWithRawJSON struct {
	// any JSON object
	AnyObject any

	// any valid JSON
	Anything any
}
