//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package paginggroup

// CustomParameterGroup contains a group of parameters for the PagingClient.GetMultiplePagesFragmentWithGroupingNextLink method.
type CustomParameterGroup struct {
	// Sets the api version to use.
	APIVersion string
	// Sets the tenant to use.
	Tenant string
}

type ODataProductResult struct {
	ODataNextLink *string
	Values        []*Product
}

// PagingClientBeginGetMultiplePagesLROOptions contains the optional parameters for the PagingClient.BeginGetMultiplePagesLRO
// method.
type PagingClientBeginGetMultiplePagesLROOptions struct {
	ClientRequestID *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Resumes the LRO from the provided token.
	ResumeToken string
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingClientDuplicateParamsOptions contains the optional parameters for the PagingClient.NewDuplicateParamsPager method.
type PagingClientDuplicateParamsOptions struct {
	// OData filter options. Pass in 'foo'
	Filter *string
}

// PagingClientFirstResponseEmptyOptions contains the optional parameters for the PagingClient.NewFirstResponseEmptyPager
// method.
type PagingClientFirstResponseEmptyOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesFailureOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesFailurePager
// method.
type PagingClientGetMultiplePagesFailureOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesFailureURIOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesFailureURIPager
// method.
type PagingClientGetMultiplePagesFailureURIOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesFragmentNextLinkOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesFragmentNextLinkPager
// method.
type PagingClientGetMultiplePagesFragmentNextLinkOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesFragmentWithGroupingNextLinkOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesFragmentWithGroupingNextLinkPager
// method.
type PagingClientGetMultiplePagesFragmentWithGroupingNextLinkOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesPager method.
type PagingClientGetMultiplePagesOptions struct {
	ClientRequestID *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingClientGetMultiplePagesRetryFirstOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesRetryFirstPager
// method.
type PagingClientGetMultiplePagesRetryFirstOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesRetrySecondOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesRetrySecondPager
// method.
type PagingClientGetMultiplePagesRetrySecondOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetMultiplePagesWithOffsetOptions contains the optional parameters for the PagingClient.NewGetMultiplePagesWithOffsetPager
// method.
type PagingClientGetMultiplePagesWithOffsetOptions struct {
	ClientRequestID *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Offset of return value
	Offset int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingClientGetNoItemNamePagesOptions contains the optional parameters for the PagingClient.NewGetNoItemNamePagesPager
// method.
type PagingClientGetNoItemNamePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetNullNextLinkNamePagesOptions contains the optional parameters for the PagingClient.NewGetNullNextLinkNamePagesPager
// method.
type PagingClientGetNullNextLinkNamePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetODataMultiplePagesOptions contains the optional parameters for the PagingClient.NewGetODataMultiplePagesPager
// method.
type PagingClientGetODataMultiplePagesOptions struct {
	ClientRequestID *string
	// Sets the maximum number of items to return in the response.
	Maxresults *int32
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int32
}

// PagingClientGetPagingModelWithItemNameWithXMSClientNameOptions contains the optional parameters for the PagingClient.NewGetPagingModelWithItemNameWithXMSClientNamePager
// method.
type PagingClientGetPagingModelWithItemNameWithXMSClientNameOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetSinglePagesFailureOptions contains the optional parameters for the PagingClient.NewGetSinglePagesFailurePager
// method.
type PagingClientGetSinglePagesFailureOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetSinglePagesOptions contains the optional parameters for the PagingClient.NewGetSinglePagesPager method.
type PagingClientGetSinglePagesOptions struct {
	// placeholder for future optional parameters
}

// PagingClientGetWithQueryParamsOptions contains the optional parameters for the PagingClient.NewGetWithQueryParamsPager
// method.
type PagingClientGetWithQueryParamsOptions struct {
	// placeholder for future optional parameters
}

type Product struct {
	Properties *ProductProperties
}

type ProductProperties struct {
	ID   *int32
	Name *string
}

type ProductResult struct {
	NextLink *string
	Values   []*Product
}

type ProductResultValue struct {
	NextLink *string
	Value    []*Product
}

type ProductResultValueWithXMSClientName struct {
	Indexes  []*Product
	NextLink *string
}
