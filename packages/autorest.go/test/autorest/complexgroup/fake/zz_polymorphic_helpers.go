//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package fake

import (
	"encoding/json"
	"generatortests/complexgroup"
)

func unmarshalFishClassification(rawMsg json.RawMessage) (complexgroup.FishClassification, error) {
	if rawMsg == nil || string(rawMsg) == "null" {
		return nil, nil
	}
	var m map[string]any
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b complexgroup.FishClassification
	switch m["fishtype"] {
	case "cookiecuttershark":
		b = &complexgroup.Cookiecuttershark{}
	case "goblin":
		b = &complexgroup.Goblinshark{}
	case "salmon":
		b = &complexgroup.Salmon{}
	case "sawshark":
		b = &complexgroup.Sawshark{}
	case "shark":
		b = &complexgroup.Shark{}
	case "smart_salmon":
		b = &complexgroup.SmartSalmon{}
	default:
		b = &complexgroup.Fish{}
	}
	if err := json.Unmarshal(rawMsg, b); err != nil {
		return nil, err
	}
	return b, nil
}

func unmarshalSalmonClassification(rawMsg json.RawMessage) (complexgroup.SalmonClassification, error) {
	if rawMsg == nil || string(rawMsg) == "null" {
		return nil, nil
	}
	var m map[string]any
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b complexgroup.SalmonClassification
	switch m["fishtype"] {
	case "smart_salmon":
		b = &complexgroup.SmartSalmon{}
	default:
		b = &complexgroup.Salmon{}
	}
	if err := json.Unmarshal(rawMsg, b); err != nil {
		return nil, err
	}
	return b, nil
}
